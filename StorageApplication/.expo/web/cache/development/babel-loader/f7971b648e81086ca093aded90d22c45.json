{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { VictoryPie } from \"victory-pie\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AccordingToTheBrand = function (_Component) {\n  _inherits(AccordingToTheBrand, _Component);\n\n  var _super = _createSuper(AccordingToTheBrand);\n\n  function AccordingToTheBrand() {\n    _classCallCheck(this, AccordingToTheBrand);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AccordingToTheBrand, [{\n    key: \"render\",\n    value: function render() {\n      var myData = [{\n        x: \"Group A\",\n        y: 900\n      }, {\n        x: \"Group B\",\n        y: 400\n      }, {\n        x: \"Group C\",\n        y: 300\n      }];\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Berendelt m\\xE1rk\\xE1ink\"\n        }), _jsx(VictoryPie, {\n          data: myData,\n          colorScale: [\"blue\", \"yellow\", \"red\"],\n          radius: 100\n        })]\n      });\n    }\n  }]);\n\n  return AccordingToTheBrand;\n}(Component);\n\nexport { AccordingToTheBrand as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/Diagram.js"],"names":["React","Component","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","VictoryPie","AccordingToTheBrand","myData","x","y"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,QAA3B,EAAoCC,aAApC,EAAkDC,iBAAlD,EAAoEC,eAApE,QAA0F,wBAA1F;AACA,SAASC,UAAT,QAA2B,aAA3B;;;;IACqBC,mB;;;;;;;;;;;;;WAgBnB,kBAAS;AACP,UAAMC,MAAM,GAAG,CACX;AAAEC,QAAAA,CAAC,EAAE,SAAL;AAAgBC,QAAAA,CAAC,EAAE;AAAnB,OADW,EAEX;AAAED,QAAAA,CAAC,EAAE,SAAL;AAAgBC,QAAAA,CAAC,EAAE;AAAnB,OAFW,EAGX;AAAED,QAAAA,CAAC,EAAE,SAAL;AAAgBC,QAAAA,CAAC,EAAE;AAAnB,OAHW,CAAf;AAKA,aACI,MAAC,IAAD;AAAA,mBACK,KAAC,IAAD;AAAA;AAAA,UADL,EAEI,KAAC,UAAD;AACI,UAAA,IAAI,EAAEF,MADV;AAEI,UAAA,UAAU,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB,CAFhB;AAGI,UAAA,MAAM,EAAE;AAHZ,UAFJ;AAAA,QADJ;AAWD;;;;EAjC8CT,S;;SAA5BQ,mB","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View} from 'react-native';\r\nimport {LineChart,BarChart,PieChart,ProgressChart,ContributionGraph,StackedBarChart} from \"react-native-chart-kit\";\r\nimport { VictoryPie } from \"victory-pie\";\r\nexport default class AccordingToTheBrand extends Component {\r\n\r\n /* state ={\r\n    data:[]\r\n  }\r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:4550/accordingToTheBrand');\r\n    const users = await response.json();\r\n    this.setState({data: users});\r\n    \r\n  }\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }*/\r\n\r\n  render() {\r\n    const myData = [\r\n        { x: \"Group A\", y: 900 },\r\n        { x: \"Group B\", y: 400 },\r\n        { x: \"Group C\", y: 300 },\r\n      ];\r\n    return (\r\n        <View>\r\n             <Text>Berendelt márkáink</Text>\r\n            <VictoryPie\r\n                data={myData}\r\n                colorScale={[\"blue\", \"yellow\", \"red\"]}\r\n                radius={100}\r\n            />\r\n        </View>\r\n       \r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}