{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport * as Progress from 'react-native-progress';\nimport { warehousefullStyle } from \"../styles/element/progressbarStyle\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar WorkersCount = function (_Component) {\n  _inherits(WorkersCount, _Component);\n\n  var _super = _createSuper(WorkersCount);\n\n  function WorkersCount() {\n    var _this;\n\n    _classCallCheck(this, WorkersCount);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      szam: 0\n    };\n\n    _this.fetchData = function _callee() {\n      var person;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = _regeneratorRuntime;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/workersNumber'));\n\n            case 3:\n              _context.t1 = _context.sent.json();\n              _context.next = 6;\n              return _context.t0.awrap.call(_context.t0, _context.t1);\n\n            case 6:\n              person = _context.sent;\n\n              _this.setState({\n                szam: person.number\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(WorkersCount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        children: _jsxs(Text, {\n          children: [\"Rakt\\xE1rosok sz\\xE1ma \", this.setState.szam, \" \"]\n        })\n      });\n    }\n  }]);\n\n  return WorkersCount;\n}(Component);\n\nexport { WorkersCount as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/WorkersCount.js"],"names":["React","Component","Progress","warehousefullStyle","WorkersCount","state","szam","fetchData","fetch","json","person","setState","number"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,SAASC,kBAAT;;;;IACqBC,Y;;;;;;;;;;;;;;;UACjBC,K,GAAO;AACHC,MAAAA,IAAI,EAAC;AADF,K;;UAIPC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACqBC,KAAK,CAAE,qCAAF,CAD1B;;AAAA;AAAA,0CACoEC,IADpE;AAAA;AAAA;;AAAA;AACDC,cAAAA,MADC;;AAEP,oBAAKC,QAAL,CAAc;AAACL,gBAAAA,IAAI,EAACI,MAAM,CAACE;AAAb,eAAd;;AAFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAIX,6BAAmB;AACf,WAAKL,SAAL;AACH;;;WAED,kBAAQ;AACJ,aACI,KAAC,IAAD;AAAA,kBACI,MAAC,IAAD;AAAA,gDAAwB,KAAKI,QAAL,CAAcL,IAAtC;AAAA;AADJ,QADJ;AAKH;;;;EAnBqCL,S;;SAArBG,Y","sourcesContent":["//workersNumber\r\nimport React, {Component} from 'react';\r\nimport {Text, View,Dimensions} from 'react-native';\r\nimport * as Progress from 'react-native-progress';\r\nimport { warehousefullStyle } from '../styles/element/progressbarStyle';\r\nexport default class WorkersCount extends Component{\r\n    state ={\r\n        szam:0,\r\n    }\r\n    \r\n    fetchData= async()=>{\r\n        const person = await (await fetch ('http://localhost:4550/workersNumber')).json();\r\n        this.setState({szam:person.number});\r\n    }\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <View>\r\n                <Text>Raktárosok száma {this.setState.szam} </Text>\r\n            </View>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}