{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Moment from 'moment';\nimport { soldsComponentStyles } from \"../styles/componentStyles/SoldsDataComponent\";\nimport SoldInMonthText from \"../components/texts/SoldInMonthTextComp\";\nimport { url } from \"../const/url\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SoldsThisMonth = function (_Component) {\n  _inherits(SoldsThisMonth, _Component);\n\n  var _super = _createSuper(SoldsThisMonth);\n\n  function SoldsThisMonth() {\n    var _this;\n\n    _classCallCheck(this, SoldsThisMonth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [],\n      yearMonth: \"\"\n    };\n\n    _this.fetchData = function _callee() {\n      var response, solds;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(url + '/sold'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              solds = _context.sent;\n\n              _this.setState({\n                data: solds\n              });\n\n              _this.setState({\n                yearMonth: solds[0].date\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(SoldsThisMonth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      Moment.locale('en');\n      return _jsxs(View, {\n        children: [_jsx(SoldInMonthText, {}), _jsx(FlatList, {\n          data: this.state.data,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(View, {\n              style: soldsComponentStyles.div,\n              children: [_jsxs(Text, {\n                style: soldsComponentStyles.data,\n                children: [item.client_name, \" - \", item.date]\n              }), _jsxs(Text, {\n                style: soldsComponentStyles.phonedata,\n                children: [item.brand_name.toUpperCase(), \" \", item.model_name.toUpperCase(), \" \", item.phone_color, \" \", item.capacity, \"GB (\", item.amount, \" db)\"]\n              })]\n            });\n          }\n        })]\n      });\n    }\n  }]);\n\n  return SoldsThisMonth;\n}(Component);\n\nexport { SoldsThisMonth as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/SoldsInMonth.js"],"names":["React","Component","Moment","soldsComponentStyles","SoldInMonthText","url","SoldsThisMonth","state","data","yearMonth","fetchData","fetch","response","json","solds","setState","date","locale","item","index","toString","div","client_name","phonedata","brand_name","toUpperCase","model_name","phone_color","capacity","amount"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,oBAAT;AACA,OAAOC,eAAP;AACA,SAASC,GAAT;;;;IAEqBC,c;;;;;;;;;;;;;;;UACnBC,K,GAAO;AACLC,MAAAA,IAAI,EAAC,EADA;AAELC,MAAAA,SAAS,EAAC;AAFL,K;;UAIPC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAACN,GAAG,GAAC,OAAL,CADnB;;AAAA;AACHO,cAAAA,QADG;AAAA;AAAA,+CAEWA,QAAQ,CAACC,IAAT,EAFX;;AAAA;AAEHC,cAAAA,KAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACP,gBAAAA,IAAI,EAAEM;AAAP,eAAd;;AACA,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,SAAS,EAAEK,KAAK,CAAC,CAAD,CAAL,CAASE;AAArB,eAAd;;AAJS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAMX,6BAAmB;AAAC,WAAKN,SAAL;AAAkB;;;WAEtC,kBAAS;AACPR,MAAAA,MAAM,CAACe,MAAP,CAAc,IAAd;AAEA,aACE,MAAC,IAAD;AAAA,mBACE,KAAC,eAAD,KADF,EAEE,KAAC,QAAD;AAAU,UAAA,IAAI,EAAE,KAAKV,KAAL,CAAWC,IAA3B;AACE,UAAA,YAAY,EAAE,sBAACU,IAAD,EAAMC,KAAN;AAAA,mBAAgBA,KAAK,CAACC,QAAN,EAAhB;AAAA,WADhB;AAEE,UAAA,UAAU,EAAE;AAAA,gBAAEF,IAAF,QAAEA,IAAF;AAAA,mBACV,MAAC,IAAD;AAAM,cAAA,KAAK,EAAEf,oBAAoB,CAACkB,GAAlC;AAAA,yBACE,MAAC,IAAD;AAAM,gBAAA,KAAK,EAAElB,oBAAoB,CAACK,IAAlC;AAAA,2BAAyCU,IAAI,CAACI,WAA9C,SAA+DJ,IAAI,CAACF,IAApE;AAAA,gBADF,EAEE,MAAC,IAAD;AAAM,gBAAA,KAAK,EAAEb,oBAAoB,CAACoB,SAAlC;AAAA,2BAA+CL,IAAI,CAACM,UAAN,CAAkBC,WAAlB,EAA9C,OAAiFP,IAAI,CAACQ,UAAN,CAAkBD,WAAlB,EAAhF,OAAkHP,IAAI,CAACS,WAAvH,OAAqIT,IAAI,CAACU,QAA1I,UAAwJV,IAAI,CAACW,MAA7J;AAAA,gBAFF;AAAA,cADU;AAAA;AAFd,UAFF;AAAA,QADF;AAcD;;;;EA9ByC5B,S;;SAAvBK,c","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View,FlatList} from 'react-native';\r\nimport Moment from 'moment';\r\nimport { soldsComponentStyles } from '../styles/componentStyles/SoldsDataComponent';\r\nimport SoldInMonthText from '../components/texts/SoldInMonthTextComp';\r\nimport { url } from '../const/url';\r\n\r\nexport default class SoldsThisMonth extends Component {\r\n  state ={\r\n    data:[],\r\n    yearMonth:\"\"\r\n  }\r\n  fetchData= async()=>{\r\n    const response = await fetch(url+'/sold');\r\n    const solds = await response.json();\r\n    this.setState({data: solds});\r\n    this.setState({yearMonth: solds[0].date});\r\n  }\r\n  componentDidMount(){this.fetchData();}\r\n\r\n  render() {\r\n    Moment.locale('en');\r\n    \r\n    return (\r\n      <View>\r\n        <SoldInMonthText/>\r\n        <FlatList data={this.state.data}\r\n          keyExtractor={(item,index) => index.toString()}\r\n          renderItem={({item}) =>\r\n            <View style={soldsComponentStyles.div}>\r\n              <Text style={soldsComponentStyles.data}>{item.client_name} - {(item.date)}</Text>\r\n              <Text style={soldsComponentStyles.phonedata}>{(item.brand_name).toUpperCase()} {(item.model_name).toUpperCase()} {item.phone_color} {item.capacity}GB ({item.amount} db)</Text>\r\n            </View>\r\n          }  \r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}