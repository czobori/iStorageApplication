{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { userComponentStyles } from \"../styles/componentStyles/UserDataComponentStyle\";\nimport { AntDesign, Entypo } from '@expo/vector-icons';\nimport LoginText from \"../components/texts/LoginTextsComp\";\nimport UserInput from \"../components/input/userInputComp\";\nimport LoginButton from \"../components/button/loginButtonComp\";\nimport { Base64 } from 'js-base64';\nimport { useForm } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginComp = function (_Component) {\n  _inherits(LoginComp, _Component);\n\n  var _super = _createSuper(LoginComp);\n\n  function LoginComp() {\n    var _this;\n\n    _classCallCheck(this, LoginComp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n\n    _this.fetchData = function _callee() {\n      var response, users;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/logindata'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              users = _context.sent;\n\n              _this.setState({\n                data: users\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginComp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _useForm = useForm(),\n          control = _useForm.control,\n          handleSubmit = _useForm.handleSubmit,\n          errors = _useForm.formState.errors,\n          watch = _useForm.watch;\n\n      var onLoginPressed = function onLoginPressed(data) {\n        var username = watch('username');\n        var originPwd = watch('password');\n        var inDatabasePwd = \"\";\n        var secretingPwd = Base64.decode(inDatabasePwd);\n        navigation.navigate(\"HomeScreen\");\n      };\n\n      return _jsxs(View, {\n        children: [_jsx(LoginText, {}), _jsx(UserInput, {\n          name: \"username\",\n          placeholder: \"felhaszn\\xE1l\\xF3n\\xE9v\",\n          control: control,\n          rules: {\n            required: 'Felhasználónév megadása kötelező!'\n          },\n          secureTextEntry: false\n        }), _jsx(UserInput, {\n          name: \"password\",\n          placeholder: \"jelsz\\xF3\",\n          control: control,\n          rules: {\n            required: 'Jelszó megadása kötelező!'\n          },\n          secureTextEntry: true\n        }), _jsx(LoginButton, {\n          onPress: handleSubmit(onLoginPressed)\n        })]\n      });\n    }\n  }]);\n\n  return LoginComp;\n}(Component);\n\nexport { LoginComp as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/LoginElement.js"],"names":["React","Component","userComponentStyles","AntDesign","Entypo","LoginText","UserInput","LoginButton","Base64","useForm","LoginComp","state","data","fetchData","fetch","response","json","users","setState","control","handleSubmit","errors","formState","watch","onLoginPressed","username","originPwd","inDatabasePwd","secretingPwd","decode","navigation","navigate","required"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,SAASC,mBAAT;AACA,SAASC,SAAT,EAAmBC,MAAnB,QAAiC,oBAAjC;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;;;IAEqBC,S;;;;;;;;;;;;;;;UACnBC,K,GAAO;AACLC,MAAAA,IAAI,EAAC;AADA,K;;UAKPC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,iCAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEWA,QAAQ,CAACC,IAAT,EAFX;;AAAA;AAEHC,cAAAA,KAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,IAAI,EAAEK;AAAP,eAAd;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAKX,6BAAmB;AACjB,WAAKJ,SAAL;AACD;;;WACD,kBAAS;AACP,qBAA0DJ,OAAO,EAAjE;AAAA,UAAOU,OAAP,YAAOA,OAAP;AAAA,UAAeC,YAAf,YAAeA,YAAf;AAAA,UAAyCC,MAAzC,YAA6BC,SAA7B,CAAyCD,MAAzC;AAAA,UAAiDE,KAAjD,YAAiDA,KAAjD;;AACA,UAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACZ,IAAD,EAAS;AAC5B,YAAMa,QAAQ,GAAGF,KAAK,CAAC,UAAD,CAAtB;AACA,YAAMG,SAAS,GAAGH,KAAK,CAAC,UAAD,CAAvB;AACA,YAAMI,aAAa,GAAG,EAAtB;AACA,YAAMC,YAAY,GAAGpB,MAAM,CAACqB,MAAP,CAAcF,aAAd,CAArB;AACAG,QAAAA,UAAU,CAACC,QAAX,CAAoB,YAApB;AACH,OAND;;AAOA,aACE,MAAC,IAAD;AAAA,mBACE,KAAC,SAAD,KADF,EAEM,KAAC,SAAD;AAAW,UAAA,IAAI,EAAC,UAAhB;AAA2B,UAAA,WAAW,EAAC,yBAAvC;AACI,UAAA,OAAO,EAAEZ,OADb;AACsB,UAAA,KAAK,EAAE;AAACa,YAAAA,QAAQ,EAAC;AAAV,WAD7B;AAC6E,UAAA,eAAe,EAAE;AAD9F,UAFN,EAKM,KAAC,SAAD;AAAW,UAAA,IAAI,EAAC,UAAhB;AAA2B,UAAA,WAAW,EAAC,WAAvC;AAAgD,UAAA,OAAO,EAAEb,OAAzD;AACI,UAAA,KAAK,EAAE;AAACa,YAAAA,QAAQ,EAAC;AAAV,WADX;AACmD,UAAA,eAAe,EAAE;AADpE,UALN,EAQM,KAAC,WAAD;AAAa,UAAA,OAAO,EAAEZ,YAAY,CAACI,cAAD;AAAlC,UARN;AAAA,QADF;AAYD;;;;EAnCoCvB,S;;SAAlBS,S","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View,FlatList} from 'react-native';\r\nimport { userComponentStyles } from '../styles/componentStyles/UserDataComponentStyle';\r\nimport { AntDesign,Entypo } from '@expo/vector-icons';\r\nimport LoginText from '../components/texts/LoginTextsComp';\r\nimport UserInput from '../components/input/userInputComp';\r\nimport LoginButton from '../components/button/loginButtonComp';\r\nimport { Base64 } from 'js-base64';\r\nimport {useForm} from 'react-hook-form'\r\n\r\nexport default class LoginComp extends Component {\r\n  state ={\r\n    data:[]\r\n  }\r\n  \r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:4550/logindata');\r\n    const users = await response.json();\r\n    this.setState({data: users});\r\n  }\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }\r\n  render() {\r\n    const {control,handleSubmit, formState: {errors},watch} = useForm();\r\n    const onLoginPressed = (data) =>{\r\n        const username = watch('username');\r\n        const originPwd = watch('password');\r\n        const inDatabasePwd = \"\";\r\n        const secretingPwd = Base64.decode(inDatabasePwd);\r\n        navigation.navigate(\"HomeScreen\");\r\n    }\r\n    return (\r\n      <View>\r\n        <LoginText/>\r\n            <UserInput name=\"username\" placeholder=\"felhasználónév\" \r\n                control={control} rules={{required:'Felhasználónév megadása kötelező!'}} secureTextEntry={false}\r\n            />\r\n            <UserInput name=\"password\" placeholder=\"jelszó\" control={control} \r\n                rules={{required:'Jelszó megadása kötelező!'}} secureTextEntry={true}\r\n            />\r\n            <LoginButton onPress={handleSubmit(onLoginPressed)}/>\r\n        </View>\r\n    );\r\n  }\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}