{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { View } from \"../components/Themed\";\nimport { useForm } from 'react-hook-form';\nimport { containerStyles } from \"../styles/element/containerStyle\";\nimport GradientBack from \"../components/linegradient/linegradent\";\nimport { url } from \"../const/url\";\nimport * as Components from \"../const/allComponents\";\nimport { Text } from \"../components/Themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm({\n    defaultValues: {\n      username: \"\",\n      password: \"\"\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors,\n      watch = _useForm.watch,\n      reset = _useForm.reset;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var onLoginPressed = function onLoginPressed(data) {\n    var User = {\n      username: watch('username'),\n      password: watch('password')\n    };\n    var option = {\n      method: 'POST',\n      body: JSON.stringify(User),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(url + '/Login', option).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      res.message == \"auth_success\" ? navigation.navigate(\"HomeScreen\") : console.log(\"not match\");\n    });\n    setTimeout(function () {\n      return reset({\n        username: \"\",\n        password: \"\"\n      });\n    }, 2000);\n  };\n\n  return _jsxs(View, {\n    style: containerStyles.container,\n    children: [_jsx(GradientBack, {}), _jsx(Components.LoginText, {}), _jsx(Components.UserInput, {\n      name: \"username\",\n      placeholder: \"felhaszn\\xE1l\\xF3n\\xE9v\",\n      control: control,\n      rules: {\n        required: 'Felhasználónév megadása kötelező!'\n      },\n      secureTextEntry: false\n    }), _jsx(Components.UserInput, {\n      name: \"password\",\n      placeholder: \"jelsz\\xF3\",\n      control: control,\n      rules: {\n        required: 'Jelszó megadása kötelező!'\n      },\n      secureTextEntry: true\n    }), _jsx(Components.LoginButton, {\n      onPress: handleSubmit(onLoginPressed)\n    }), _jsx(Text, {\n      children: \" Hib\\xE1s adatbevitel!\"\n    })]\n  });\n}","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/screens/LoginScreen.tsx"],"names":["React","useState","View","useForm","containerStyles","GradientBack","url","Components","Text","LoginScreen","navigation","defaultValues","username","password","control","handleSubmit","errors","formState","watch","reset","show","setShow","onLoginPressed","data","User","option","method","body","JSON","stringify","headers","fetch","then","res","json","message","navigate","console","log","setTimeout","container","required"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AAEA,SAAQC,eAAR;AACA,OAAOC,YAAP;AACA,SAASC,GAAT;AACA,OAAO,KAAKC,UAAZ;AACA,SAASC,IAAT;;;AAGA,eAAe,SAASC,WAAT,OAAwE;AAAA,MAAjDC,UAAiD,QAAjDA,UAAiD;;AACrF,iBAAgEP,OAAO,CAAC;AACtEQ,IAAAA,aAAa,EAAC;AAACC,MAAAA,QAAQ,EAAC,EAAV;AAAaC,MAAAA,QAAQ,EAAC;AAAtB;AADwD,GAAD,CAAvE;AAAA,MAAOC,OAAP,YAAOA,OAAP;AAAA,MAAeC,YAAf,YAAeA,YAAf;AAAA,MAAyCC,MAAzC,YAA6BC,SAA7B,CAAyCD,MAAzC;AAAA,MAAiDE,KAAjD,YAAiDA,KAAjD;AAAA,MAAuDC,KAAvD,YAAuDA,KAAvD;;AAGA,kBAAwBlB,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOmB,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAc;AACnC,QAAMC,IAAI,GAAC;AACTZ,MAAAA,QAAQ,EAAGM,KAAK,CAAC,UAAD,CADP;AAETL,MAAAA,QAAQ,EAAEK,KAAK,CAAC,UAAD;AAFN,KAAX;AAIA,QAAMO,MAAM,GAAC;AACXC,MAAAA,MAAM,EAAC,MADI;AAEXC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFM;AAGXM,MAAAA,OAAO,EAAC;AAAC,wBAAgB;AAAjB;AAHG,KAAb;AAKAC,IAAAA,KAAK,CAACzB,GAAG,GAAC,QAAL,EAAcmB,MAAd,CAAL,CACGO,IADH,CACQ,UAAAC,GAAG;AAAA,aAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,KADX,EAEGF,IAFH,CAEQ,UAAAC,GAAG,EAAE;AAACA,MAAAA,GAAG,CAACE,OAAJ,IAAc,cAAd,GAA+BzB,UAAU,CAAC0B,QAAX,CAAoB,YAApB,CAA/B,GAAmEC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAnE;AAA6F,KAF3G;AAIAC,IAAAA,UAAU,CAAC;AAAA,aAAMpB,KAAK,CAAC;AAACP,QAAAA,QAAQ,EAAC,EAAV;AAAaC,QAAAA,QAAQ,EAAC;AAAtB,OAAD,CAAX;AAAA,KAAD,EAAyC,IAAzC,CAAV;AAED,GAhBD;;AAkBA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAET,eAAe,CAACoC,SAA7B;AAAA,eACE,KAAC,YAAD,KADF,EAEE,KAAC,UAAD,CAAY,SAAZ,KAFF,EAGE,KAAC,UAAD,CAAY,SAAZ;AAAsB,MAAA,IAAI,EAAC,UAA3B;AAAsC,MAAA,WAAW,EAAC,yBAAlD;AACE,MAAA,OAAO,EAAE1B,OADX;AACoB,MAAA,KAAK,EAAE;AAAC2B,QAAAA,QAAQ,EAAC;AAAV,OAD3B;AAC2E,MAAA,eAAe,EAAE;AAD5F,MAHF,EAKE,KAAC,UAAD,CAAY,SAAZ;AAAsB,MAAA,IAAI,EAAC,UAA3B;AAAsC,MAAA,WAAW,EAAC,WAAlD;AAA2D,MAAA,OAAO,EAAE3B,OAApE;AACE,MAAA,KAAK,EAAE;AAAC2B,QAAAA,QAAQ,EAAC;AAAV,OADT;AACiD,MAAA,eAAe,EAAE;AADlE,MALF,EAOE,KAAC,UAAD,CAAY,WAAZ;AAAwB,MAAA,OAAO,EAAE1B,YAAY,CAACO,cAAD;AAA7C,MAPF,EAQE,KAAC,IAAD;AAAA;AAAA,MARF;AAAA,IADF;AAYD","sourcesContent":["import React, {useState} from 'react';\r\nimport {View} from '../components/Themed';\r\nimport {useForm} from 'react-hook-form'\r\nimport {RootTabScreenProps} from '../types';\r\nimport {containerStyles} from '../styles/element/containerStyle';\r\nimport GradientBack from '../components/linegradient/linegradent';\r\nimport { url } from '../const/url';\r\nimport * as Components from \"../const/allComponents\";\r\nimport { Text } from '../components/Themed';\r\nimport { FontDisplay } from 'expo-font';\r\n\r\nexport default function LoginScreen({ navigation }: RootTabScreenProps<'LoginScreen'>) {\r\n  const {control,handleSubmit, formState: {errors},watch,reset} = useForm({\r\n    defaultValues:{username:\"\",password:\"\"}\r\n  });\r\n  const [show, setShow] = useState(false); \r\n  const onLoginPressed = (data: any) =>{ \r\n    const User={\r\n      username : watch('username'),\r\n      password: watch('password')\r\n    }\r\n    const option={\r\n      method:'POST',\r\n      body:JSON.stringify(User),\r\n      headers:{'Content-Type': 'application/json'}\r\n    }\r\n    fetch(url+'/Login',option)\r\n      .then(res=>res.json())\r\n      .then(res=>{res.message ==\"auth_success\" ? navigation.navigate(\"HomeScreen\") : console.log(\"not match\");})\r\n      \r\n    setTimeout(() => reset({username:\"\",password:\"\"}), 2000);\r\n      \r\n  };\r\n  \r\n  return (\r\n    <View style={containerStyles.container}>\r\n      <GradientBack/>\r\n      <Components.LoginText/>\r\n      <Components.UserInput name=\"username\" placeholder=\"felhasználónév\" \r\n        control={control} rules={{required:'Felhasználónév megadása kötelező!'}} secureTextEntry={false}/>\r\n      <Components.UserInput name=\"password\" placeholder=\"jelszó\" control={control} \r\n        rules={{required:'Jelszó megadása kötelező!'}} secureTextEntry={true}/>\r\n      <Components.LoginButton onPress={handleSubmit(onLoginPressed)}/>\r\n      <Text> Hibás adatbevitel!</Text>\r\n    </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}