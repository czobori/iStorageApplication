{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { VictoryPie } from \"victory-pie\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AccordingToTheBrand = function (_Component) {\n  _inherits(AccordingToTheBrand, _Component);\n\n  var _super = _createSuper(AccordingToTheBrand);\n\n  function AccordingToTheBrand() {\n    var _this;\n\n    _classCallCheck(this, AccordingToTheBrand);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n\n    _this.fetchData = function _callee() {\n      var response, diagramdata;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/accordingToTheBrand'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              diagramdata = _context.sent;\n\n              _this.setState({\n                data: diagramdata\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(AccordingToTheBrand, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var myData = [{\n        x: \"Group A\",\n        y: 900\n      }, {\n        x: \"Group B\",\n        y: 400\n      }, {\n        x: \"Group C\",\n        y: 300\n      }];\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Berendelt m\\xE1rk\\xE1ink\"\n        }), _jsx(VictoryPie, {\n          data: this.state.data,\n          colorScale: [\"blue\", \"yellow\", \"red\"],\n          radius: 100\n        })]\n      });\n    }\n  }]);\n\n  return AccordingToTheBrand;\n}(Component);\n\nexport { AccordingToTheBrand as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/Diagram.js"],"names":["React","Component","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","VictoryPie","AccordingToTheBrand","state","data","fetchData","fetch","response","json","diagramdata","setState","myData","x","y"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,QAA3B,EAAoCC,aAApC,EAAkDC,iBAAlD,EAAoEC,eAApE,QAA0F,wBAA1F;AACA,SAASC,UAAT,QAA2B,aAA3B;;;;IACqBC,mB;;;;;;;;;;;;;;;UAEpBC,K,GAAO;AACJC,MAAAA,IAAI,EAAC;AADD,K;;UAINC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,2CAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEiBA,QAAQ,CAACC,IAAT,EAFjB;;AAAA;AAEHC,cAAAA,WAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,IAAI,EAAEK;AAAP,eAAd;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAMX,6BAAmB;AACjB,WAAKJ,SAAL;AACD;;;WAID,kBAAS;AACP,UAAMM,MAAM,GAAG,CACX;AAAEC,QAAAA,CAAC,EAAE,SAAL;AAAgBC,QAAAA,CAAC,EAAE;AAAnB,OADW,EAEX;AAAED,QAAAA,CAAC,EAAE,SAAL;AAAgBC,QAAAA,CAAC,EAAE;AAAnB,OAFW,EAGX;AAAED,QAAAA,CAAC,EAAE,SAAL;AAAgBC,QAAAA,CAAC,EAAE;AAAnB,OAHW,CAAf;AAKA,aACI,MAAC,IAAD;AAAA,mBACK,KAAC,IAAD;AAAA;AAAA,UADL,EAEI,KAAC,UAAD;AACI,UAAA,IAAI,EAAE,KAAKV,KAAL,CAAWC,IADrB;AAEI,UAAA,UAAU,EAAE,CAAC,MAAD,EAAS,QAAT,EAAkB,KAAlB,CAFhB;AAGI,UAAA,MAAM,EAAE;AAHZ,UAFJ;AAAA,QADJ;AAWD;;;;EAnC8CV,S;;SAA5BQ,mB","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View} from 'react-native';\r\nimport {LineChart,BarChart,PieChart,ProgressChart,ContributionGraph,StackedBarChart} from \"react-native-chart-kit\";\r\nimport { VictoryPie } from \"victory-pie\";\r\nexport default class AccordingToTheBrand extends Component {\r\n\r\n state ={\r\n    data:[]\r\n  }\r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:4550/accordingToTheBrand');\r\n    const diagramdata = await response.json();\r\n    this.setState({data: diagramdata});\r\n    \r\n  }\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const myData = [\r\n        { x: \"Group A\", y: 900 },\r\n        { x: \"Group B\", y: 400 },\r\n        { x: \"Group C\", y: 300 },\r\n      ];\r\n    return (\r\n        <View>\r\n             <Text>Berendelt márkáink</Text>\r\n            <VictoryPie\r\n                data={this.state.data}\r\n                colorScale={[\"blue\", \"yellow\",\"red\"]}\r\n                radius={100}\r\n            />\r\n        </View>\r\n       \r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}