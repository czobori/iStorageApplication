{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AccordingToTheBrand = function (_Component) {\n  _inherits(AccordingToTheBrand, _Component);\n\n  var _super = _createSuper(AccordingToTheBrand);\n\n  function AccordingToTheBrand() {\n    var _this;\n\n    _classCallCheck(this, AccordingToTheBrand);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n\n    _this.fetchData = function _callee() {\n      var response, users;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/accordingToTheBrand'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              users = _context.sent;\n\n              _this.setState({\n                data: users\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(AccordingToTheBrand, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var widthAndHeight = 250;\n      var series = [123, 321, 123, 789, 537];\n      var sliceColor = ['#F44336', '#2196F3', '#FFEB3B', '#4CAF50', '#FF9800'];\n      return _jsx(View, {\n        children: _jsx(ScrollView, {\n          style: {\n            flex: 1\n          },\n          children: _jsxs(View, {\n            style: styles.container,\n            children: [_jsx(Text, {\n              style: styles.title,\n              children: \"Basic\"\n            }), _jsx(PieChart, {\n              widthAndHeight: widthAndHeight,\n              series: series,\n              sliceColor: sliceColor\n            }), _jsx(Text, {\n              style: styles.title,\n              children: \"Doughnut\"\n            }), _jsx(PieChart, {\n              widthAndHeight: widthAndHeight,\n              series: series,\n              sliceColor: sliceColor,\n              doughnut: true,\n              coverRadius: 0.45,\n              coverFill: '#FFF'\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return AccordingToTheBrand;\n}(Component);\n\nexport { AccordingToTheBrand as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/Diagram.js"],"names":["React","Component","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","AccordingToTheBrand","state","data","fetchData","fetch","response","json","users","setState","widthAndHeight","series","sliceColor","flex","styles","container","title"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,QAA3B,EAAoCC,aAApC,EAAkDC,iBAAlD,EAAoEC,eAApE,QAA0F,wBAA1F;;;;IACqBC,mB;;;;;;;;;;;;;;;UAEnBC,K,GAAO;AACLC,MAAAA,IAAI,EAAC;AADA,K;;UAIPC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,2CAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEWA,QAAQ,CAACC,IAAT,EAFX;;AAAA;AAEHC,cAAAA,KAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,IAAI,EAAEK;AAAP,eAAd;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAMX,6BAAmB;AACjB,WAAKJ,SAAL;AACD;;;WAED,kBAAS;AACP,UAAMM,cAAc,GAAG,GAAvB;AACA,UAAMC,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAf;AACA,UAAMC,UAAU,GAAG,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAAgC,SAAhC,EAA2C,SAA3C,CAAnB;AAEA,aACI,KAAC,IAAD;AAAA,kBACI,KAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAACC,YAAAA,IAAI,EAAE;AAAP,WAAnB;AAAA,oBACI,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,uBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,cADJ,EAEI,KAAC,QAAD;AACI,cAAA,cAAc,EAAEN,cADpB;AAEI,cAAA,MAAM,EAAEC,MAFZ;AAGI,cAAA,UAAU,EAAEC;AAHhB,cAFJ,EAOI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEE,MAAM,CAACE,KAApB;AAAA;AAAA,cAPJ,EAQI,KAAC,QAAD;AACI,cAAA,cAAc,EAAEN,cADpB;AAEI,cAAA,MAAM,EAAEC,MAFZ;AAGI,cAAA,UAAU,EAAEC,UAHhB;AAII,cAAA,QAAQ,EAAE,IAJd;AAKI,cAAA,WAAW,EAAE,IALjB;AAMI,cAAA,SAAS,EAAE;AANf,cARJ;AAAA;AADJ;AADJ,QADJ;AAuBD;;;;EA5C8ClB,S;;SAA5BO,mB","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View} from 'react-native';\r\nimport {LineChart,BarChart,PieChart,ProgressChart,ContributionGraph,StackedBarChart} from \"react-native-chart-kit\";\r\nexport default class AccordingToTheBrand extends Component {\r\n\r\n  state ={\r\n    data:[]\r\n  }\r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:4550/accordingToTheBrand');\r\n    const users = await response.json();\r\n    this.setState({data: users});\r\n    \r\n  }\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    const widthAndHeight = 250\r\n    const series = [123, 321, 123, 789, 537]\r\n    const sliceColor = ['#F44336','#2196F3','#FFEB3B', '#4CAF50', '#FF9800']\r\n\r\n    return (\r\n        <View>\r\n            <ScrollView style={{flex: 1}}>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.title}>Basic</Text>\r\n                    <PieChart\r\n                        widthAndHeight={widthAndHeight}\r\n                        series={series}\r\n                        sliceColor={sliceColor}\r\n                    />\r\n                    <Text style={styles.title}>Doughnut</Text>\r\n                    <PieChart\r\n                        widthAndHeight={widthAndHeight}\r\n                        series={series}\r\n                        sliceColor={sliceColor}\r\n                        doughnut={true}\r\n                        coverRadius={0.45}\r\n                        coverFill={'#FFF'}\r\n                    />\r\n                </View>\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}