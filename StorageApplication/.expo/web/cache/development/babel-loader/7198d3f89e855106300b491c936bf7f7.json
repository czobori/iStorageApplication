{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AccordingToTheBrand = function (_Component) {\n  _inherits(AccordingToTheBrand, _Component);\n\n  var _super = _createSuper(AccordingToTheBrand);\n\n  function AccordingToTheBrand() {\n    var _this;\n\n    _classCallCheck(this, AccordingToTheBrand);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n\n    _this.fetchData = function _callee() {\n      var response, diagramdata;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/accordingToTheBrand'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              diagramdata = _context.sent;\n\n              _this.setState({\n                data: diagramdata\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(AccordingToTheBrand, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var arr = this.state.data;\n\n      var brandNames = function brandNames() {\n        return arr.map(function (x) {\n          return x.brand_name;\n        });\n      };\n\n      var berendeltDbs = function berendeltDbs() {\n        return arr.map(function (x) {\n          return x.berendeltDb;\n        });\n      };\n\n      console.log(brandNames());\n      console.log(berendeltDbs());\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Berendelt m\\xE1rk\\xE1ink\"\n        }), _jsx(LineChart, {\n          data: {\n            labels: [{\n              brandNames: brandNames\n            }],\n            datasets: [{\n              berendeltDb: berendeltDb\n            }]\n          },\n          width: Dimensions.get('window').width,\n          height: 220,\n          chartConfig: {\n            backgroundColor: '#e26a00',\n            backgroundGradientFrom: '#fb8c00',\n            backgroundGradientTo: '#ffa726',\n            decimalPlaces: 2,\n            color: function color() {\n              var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n              return \"rgba(255, 255, 255, \" + opacity + \")\";\n            },\n            style: {\n              borderRadius: 16\n            }\n          },\n          bezier: true,\n          style: {\n            marginVertical: 8,\n            borderRadius: 16\n          }\n        })]\n      });\n    }\n  }]);\n\n  return AccordingToTheBrand;\n}(Component);\n\nexport { AccordingToTheBrand as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/Diagram.js"],"names":["React","Component","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","AccordingToTheBrand","state","data","fetchData","fetch","response","json","diagramdata","setState","arr","brandNames","map","x","brand_name","berendeltDbs","berendeltDb","console","log","labels","datasets","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","marginVertical"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,QAA3B,EAAoCC,aAApC,EAAkDC,iBAAlD,EAAoEC,eAApE,QAA0F,wBAA1F;;;;IACqBC,mB;;;;;;;;;;;;;;;UAEpBC,K,GAAO;AACJC,MAAAA,IAAI,EAAC;AADD,K;;UAINC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,2CAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEiBA,QAAQ,CAACC,IAAT,EAFjB;;AAAA;AAEHC,cAAAA,WAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,IAAI,EAAEK;AAAP,eAAd;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAMX,6BAAmB;AACjB,WAAKJ,SAAL;AACD;;;WAED,kBAAS;AACP,UAAMM,GAAG,GAAG,KAAKR,KAAL,CAAWC,IAAvB;;AACA,UAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,eAAOD,GAAG,CAACE,GAAJ,CAAQ,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,UAAN;AAAA,SAAT,CAAP;AACD,OAFD;;AAIA,UAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,eAAOL,GAAG,CAACE,GAAJ,CAAQ,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACG,WAAN;AAAA,SAAT,CAAP;AACD,OAFD;;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,UAAU,EAAtB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,EAAxB;AACA,aACI,MAAC,IAAD;AAAA,mBACI,KAAC,IAAD;AAAA;AAAA,UADJ,EAEI,KAAC,SAAD;AACE,UAAA,IAAI,EAAE;AACJI,YAAAA,MAAM,EAAE,CAAC;AAACR,cAAAA,UAAU,EAAVA;AAAD,aAAD,CADJ;AAEJS,YAAAA,QAAQ,EAAE,CAAC;AAACJ,cAAAA,WAAW,EAAXA;AAAD,aAAD;AAFN,WADR;AAKE,UAAA,KAAK,EAAEK,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KALlC;AAME,UAAA,MAAM,EAAE,GANV;AAOE,UAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE,SADN;AAEXC,YAAAA,sBAAsB,EAAE,SAFb;AAGXC,YAAAA,oBAAoB,EAAE,SAHX;AAIXC,YAAAA,aAAa,EAAE,CAJJ;AAKXC,YAAAA,KAAK,EAAE;AAAA,kBAACC,OAAD,uEAAW,CAAX;AAAA,8CAAwCA,OAAxC;AAAA,aALI;AAMXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,YAAY,EAAE;AADT;AANI,WAPf;AAiBE,UAAA,MAAM,MAjBR;AAkBE,UAAA,KAAK,EAAE;AACLC,YAAAA,cAAc,EAAE,CADX;AAELD,YAAAA,YAAY,EAAE;AAFT;AAlBT,UAFJ;AAAA,QADJ;AA6BD;;;;EAzD8CrC,S;;SAA5BO,mB","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View} from 'react-native';\r\nimport {LineChart,BarChart,PieChart,ProgressChart,ContributionGraph,StackedBarChart} from \"react-native-chart-kit\";\r\nexport default class AccordingToTheBrand extends Component {\r\n\r\n state ={\r\n    data:[]\r\n  }\r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:4550/accordingToTheBrand');\r\n    const diagramdata = await response.json();\r\n    this.setState({data: diagramdata});\r\n    \r\n  }\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    const arr = this.state.data;\r\n    const brandNames = () => {\r\n      return arr.map(x => x.brand_name);\r\n    }\r\n    \r\n    const berendeltDbs = () => {\r\n      return arr.map(x => x.berendeltDb);\r\n    }\r\n    \r\n    console.log(brandNames());\r\n    console.log(berendeltDbs());\r\n    return (\r\n        <View>\r\n            <Text>Berendelt márkáink</Text>\r\n            <LineChart\r\n              data={{\r\n                labels: [{brandNames}],\r\n                datasets: [{berendeltDb}]\r\n              }}\r\n              width={Dimensions.get('window').width} // from react-native\r\n              height={220}\r\n              chartConfig={{\r\n                backgroundColor: '#e26a00',\r\n                backgroundGradientFrom: '#fb8c00',\r\n                backgroundGradientTo: '#ffa726',\r\n                decimalPlaces: 2, // optional, defaults to 2dp\r\n                color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                style: {\r\n                  borderRadius: 16\r\n                }\r\n              }}\r\n              bezier\r\n              style={{\r\n                marginVertical: 8,\r\n                borderRadius: 16\r\n              }}\r\n            />\r\n        </View>\r\n       \r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}