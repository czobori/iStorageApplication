{"ast":null,"code":"import React from 'react';\nimport { View } from \"../components/Themed\";\nimport { useForm } from 'react-hook-form';\nimport { containerStyles } from \"../styles/element/containerStyle\";\nimport UserInput from \"../components/input/userInputComp\";\nimport LoginText from \"../components/texts/LoginTextsComp\";\nimport GradientBack from \"../components/linegradient/linegradent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors,\n      watch = _useForm.watch;\n\n  var onLoginPressed = function onLoginPressed(data) {\n    var originusername = watch('username');\n    var originPwd = watch('password');\n    var id = watch('id');\n    var User = {\n      username: originusername,\n      password: originPwd\n    };\n    var option = {\n      method: 'POST',\n      body: JSON.stringify(User),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  };\n\n  return _jsxs(View, {\n    style: containerStyles.container,\n    children: [_jsx(GradientBack, {}), _jsx(LoginText, {}), _jsx(UserInput, {\n      name: \"username\",\n      placeholder: \"felhaszn\\xE1l\\xF3n\\xE9v\",\n      control: control,\n      rules: {\n        required: 'Felhasználónév megadása kötelező!'\n      },\n      secureTextEntry: false\n    }), _jsx(UserInput, {\n      name: \"password\",\n      placeholder: \"jelsz\\xF3\",\n      control: control,\n      rules: {\n        required: 'Jelszó megadása kötelező!'\n      },\n      secureTextEntry: true\n    }), _jsx(UserInput, {\n      name: \"id\",\n      placeholder: \"azonos\\xEDt\\xF3\",\n      control: control,\n      rules: {\n        required: 'Azonosító megadása kötelező!'\n      },\n      secureTextEntry: true\n    })]\n  });\n}","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/screens/LoginScreen.tsx"],"names":["React","View","useForm","containerStyles","UserInput","LoginText","GradientBack","LoginScreen","navigation","control","handleSubmit","errors","formState","watch","onLoginPressed","data","originusername","originPwd","id","User","username","password","option","method","body","JSON","stringify","headers","container","required"],"mappings":"AAAA,OAAOA,KAAP,MAA8B,OAA9B;AACA,SAAQC,IAAR;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AAEA,SAAQC,eAAR;AACA,OAAOC,SAAP;AAEA,OAAOC,SAAP;AACA,OAAOC,YAAP;;;AAKA,eAAe,SAASC,WAAT,OAAwE;AAAA,MAAjDC,UAAiD,QAAjDA,UAAiD;;AACrF,iBAA0DN,OAAO,EAAjE;AAAA,MAAOO,OAAP,YAAOA,OAAP;AAAA,MAAeC,YAAf,YAAeA,YAAf;AAAA,MAAyCC,MAAzC,YAA6BC,SAA7B,CAAyCD,MAAzC;AAAA,MAAiDE,KAAjD,YAAiDA,KAAjD;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAc;AACnC,QAAMC,cAAc,GAAGH,KAAK,CAAC,UAAD,CAA5B;AACA,QAAMI,SAAS,GAAGJ,KAAK,CAAC,UAAD,CAAvB;AACA,QAAMK,EAAE,GAAGL,KAAK,CAAC,IAAD,CAAhB;AACA,QAAMM,IAAI,GAAE;AACVC,MAAAA,QAAQ,EAAEJ,cADA;AAEVK,MAAAA,QAAQ,EAACJ;AAFC,KAAZ;AAIA,QAAMK,MAAM,GAAC;AACXC,MAAAA,MAAM,EAAC,MADI;AAEXC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAFM;AAGXQ,MAAAA,OAAO,EAAC;AACN,wBAAe;AADT;AAHG,KAAb;AASD,GAjBD;;AAmBA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,eAAe,CAACyB,SAA7B;AAAA,eACE,KAAC,YAAD,KADF,EAGE,KAAC,SAAD,KAHF,EAIE,KAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,WAAW,EAAC,yBAAvC;AACE,MAAA,OAAO,EAAEnB,OADX;AACoB,MAAA,KAAK,EAAE;AAACoB,QAAAA,QAAQ,EAAC;AAAV,OAD3B;AAC2E,MAAA,eAAe,EAAE;AAD5F,MAJF,EAME,KAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,WAAW,EAAC,WAAvC;AAAgD,MAAA,OAAO,EAAEpB,OAAzD;AACG,MAAA,KAAK,EAAE;AAACoB,QAAAA,QAAQ,EAAC;AAAV,OADV;AACkD,MAAA,eAAe,EAAE;AADnE,MANF,EAQE,KAAC,SAAD;AAAW,MAAA,IAAI,EAAC,IAAhB;AAAqB,MAAA,WAAW,EAAC,iBAAjC;AAA6C,MAAA,OAAO,EAAEpB,OAAtD;AACE,MAAA,KAAK,EAAE;AAACoB,QAAAA,QAAQ,EAAC;AAAV,OADT;AACoD,MAAA,eAAe,EAAE;AADrE,MARF;AAAA,IADF;AAcD","sourcesContent":["import React, {useState} from 'react';\r\nimport {View} from '../components/Themed';\r\nimport {useForm} from 'react-hook-form'\r\nimport {RootTabScreenProps} from '../types';\r\nimport {containerStyles} from '../styles/element/containerStyle';\r\nimport UserInput from '../components/input/userInputComp';\r\nimport LoginButton from '../components/button/loginButtonComp';\r\nimport LoginText from '../components/texts/LoginTextsComp';\r\nimport GradientBack from '../components/linegradient/linegradent';\r\nimport { Base64 } from 'js-base64';\r\nimport { getAllUserData } from '../data/getUserData';\r\n\r\n\r\nexport default function LoginScreen({ navigation }: RootTabScreenProps<'LoginScreen'>) {\r\n  const {control,handleSubmit, formState: {errors},watch} = useForm();\r\n  const onLoginPressed = (data: any) =>{\r\n    const originusername = watch('username');\r\n    const originPwd = watch('password');\r\n    const id = watch('id');\r\n    const User ={\r\n      username: originusername,\r\n      password:originPwd,\r\n    }\r\n    const option={\r\n      method:'POST',\r\n      body:JSON.stringify(User),\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      }\r\n    }\r\n    \r\n    //navigation.navigate(\"HomeScreen\");\r\n  };\r\n\r\n  return (\r\n    <View style={containerStyles.container}>\r\n      <GradientBack/>\r\n      \r\n      <LoginText/>\r\n      <UserInput name=\"username\" placeholder=\"felhasználónév\" \r\n        control={control} rules={{required:'Felhasználónév megadása kötelező!'}} secureTextEntry={false} />\r\n      <UserInput name=\"password\" placeholder=\"jelszó\" control={control} \r\n         rules={{required:'Jelszó megadása kötelező!'}} secureTextEntry={true}/>\r\n      <UserInput name=\"id\" placeholder=\"azonosító\" control={control} \r\n        rules={{required:'Azonosító megadása kötelező!'}} secureTextEntry={true}/>\r\n     {/*} <LoginButton onPress={handleSubmit(onLoginPressed)}/>*/}\r\n    </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}