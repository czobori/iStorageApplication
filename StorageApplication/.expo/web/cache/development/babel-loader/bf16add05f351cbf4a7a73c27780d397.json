{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { stockComponentStyles } from \"../styles/componentStyles/StockDataComponentStyle\";\nimport Moment from 'moment';\nimport { format } from \"date-fns\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Stocks = function (_Component) {\n  _inherits(Stocks, _Component);\n\n  var _super = _createSuper(Stocks);\n\n  function Stocks() {\n    var _this;\n\n    _classCallCheck(this, Stocks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n\n    _this.fetchData = function _callee() {\n      var response, stock;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/stock'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              stock = _context.sent;\n\n              _this.setState({\n                data: stock\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(Stocks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      Moment.locale('en');\n      return _jsx(View, {\n        children: _jsx(FlatList, {\n          data: this.state.data,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(View, {\n              style: stockComponentStyles.div,\n              children: [_jsxs(Text, {\n                style: stockComponentStyles.telefonadat,\n                children: [item.brand_name, \" \", item.model_name, \" \", item.phone_color, \" \", item.capacity, \"GB (\", item.amount, \" db)\"]\n              }), _jsxs(Text, {\n                style: stockComponentStyles.rendelt,\n                children: [\" \", item.username, \" - \", Moment(item.date).format('YYYY.MM.DD HH:mm')]\n              })]\n            });\n          }\n        })\n      });\n    }\n  }]);\n\n  return Stocks;\n}(Component);\n\nexport { Stocks as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/Stocks.js"],"names":["React","Component","stockComponentStyles","Moment","format","Stocks","state","data","fetchData","fetch","response","json","stock","setState","locale","item","index","toString","div","telefonadat","brand_name","model_name","phone_color","capacity","amount","rendelt","username","date"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,SAASC,oBAAT;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,QAAuB,UAAvB;;;;IAEqBC,M;;;;;;;;;;;;;;;UACnBC,K,GAAO;AACLC,MAAAA,IAAI,EAAC;AADA,K;;UAIPC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,6BAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEWA,QAAQ,CAACC,IAAT,EAFX;;AAAA;AAEHC,cAAAA,KAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,IAAI,EAAEK;AAAP,eAAd;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAMX,6BAAmB;AACjB,WAAKJ,SAAL;AACD;;;WAED,kBAAS;AACPL,MAAAA,MAAM,CAACW,MAAP,CAAc,IAAd;AACA,aACE,KAAC,IAAD;AAAA,kBACE,KAAC,QAAD;AACE,UAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,IADnB;AAEE,UAAA,YAAY,EAAE,sBAACQ,IAAD,EAAMC,KAAN;AAAA,mBAAgBA,KAAK,CAACC,QAAN,EAAhB;AAAA,WAFhB;AAGE,UAAA,UAAU,EAAE;AAAA,gBAAEF,IAAF,QAAEA,IAAF;AAAA,mBACV,MAAC,IAAD;AAAM,cAAA,KAAK,EAAEb,oBAAoB,CAACgB,GAAlC;AAAA,yBACE,MAAC,IAAD;AAAO,gBAAA,KAAK,EAAEhB,oBAAoB,CAACiB,WAAnC;AAAA,2BAAiDJ,IAAI,CAACK,UAAtD,OAAmEL,IAAI,CAACM,UAAxE,OAAqFN,IAAI,CAACO,WAA1F,OAAwGP,IAAI,CAACQ,QAA7G,UAA2HR,IAAI,CAACS,MAAhI;AAAA,gBADF,EAEE,MAAC,IAAD;AAAM,gBAAA,KAAK,EAAEtB,oBAAoB,CAACuB,OAAlC;AAAA,gCAA6CV,IAAI,CAACW,QAAlD,SAA+DvB,MAAM,CAACY,IAAI,CAACY,IAAN,CAAN,CAAkBvB,MAAlB,CAAyB,kBAAzB,CAA/D;AAAA,gBAFF;AAAA,cADU;AAAA;AAHd;AADF,QADF;AAcD;;;;EA/BiCH,S;;SAAfI,M","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View,FlatList} from 'react-native';\r\nimport { stockComponentStyles } from '../styles/componentStyles/StockDataComponentStyle';\r\nimport Moment from 'moment';\r\nimport { format } from \"date-fns\";\r\n\r\nexport default class Stocks extends Component {\r\n  state ={\r\n    data:[]\r\n  }\r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:4550/stock');\r\n    const stock = await response.json();\r\n    this.setState({data: stock});\r\n\r\n  }\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }\r\n \r\n  render() {\r\n    Moment.locale('en');\r\n    return (\r\n      <View>\r\n        <FlatList\r\n          data={this.state.data}\r\n          keyExtractor={(item,index) => index.toString()}\r\n          renderItem={({item}) =>\r\n            <View style={stockComponentStyles.div}>\r\n              <Text  style={stockComponentStyles.telefonadat}>{item.brand_name} {item.model_name} {item.phone_color} {item.capacity}GB ({item.amount} db)</Text>\r\n              <Text style={stockComponentStyles.rendelt}> {item.username} - {Moment(item.date).format('YYYY.MM.DD HH:mm')}</Text>\r\n            </View>\r\n          }  \r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}