{"ast":null,"code":"import React from 'react';\nimport { View } from \"../components/Themed\";\nimport { useForm } from 'react-hook-form';\nimport { containerStyles } from \"../styles/element/containerStyle\";\nimport UserInput from \"../components/input/userInputComp\";\nimport LoginButton from \"../components/button/loginButtonComp\";\nimport LoginText from \"../components/texts/LoginTextsComp\";\nimport GradientBack from \"../components/linegradient/linegradent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var onLoginPressed = function onLoginPressed(data) {\n    console.log(data);\n  };\n\n  return _jsxs(View, {\n    style: containerStyles.container,\n    children: [_jsx(GradientBack, {}), _jsx(LoginText, {}), _jsx(UserInput, {\n      name: \"username\",\n      placeholder: \"felhaszn\\xE1l\\xF3n\\xE9v\",\n      control: control,\n      secureTextEntry: false,\n      rules: {\n        required: true\n      }\n    }), _jsx(UserInput, {\n      name: \"password\",\n      placeholder: \"jelsz\\xF3\",\n      control: control,\n      secureTextEntry: true\n    }), _jsx(LoginButton, {\n      onPress: handleSubmit(onLoginPressed)\n    })]\n  });\n}","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/screens/LoginScreen.tsx"],"names":["React","View","useForm","containerStyles","UserInput","LoginButton","LoginText","GradientBack","LoginScreen","navigation","control","handleSubmit","errors","formState","onLoginPressed","data","console","log","container","required"],"mappings":"AAAA,OAAOA,KAAP,MAA8B,OAA9B;AAEA,SAAQC,IAAR;AACA,SAAQC,OAAR,QAAiC,iBAAjC;AAEA,SAAQC,eAAR;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,YAAP;;;AAEA,eAAe,SAASC,WAAT,OAAwE;AAAA,MAAjDC,UAAiD,QAAjDA,UAAiD;;AACrF,iBAAoDP,OAAO,EAA3D;AAAA,MAAOQ,OAAP,YAAOA,OAAP;AAAA,MAAeC,YAAf,YAAeA,YAAf;AAAA,MAAyCC,MAAzC,YAA6BC,SAA7B,CAAyCD,MAAzC;;AACA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAc;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAKD,GAND;;AAQA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,eAAe,CAACe,SAA7B;AAAA,eACE,KAAC,YAAD,KADF,EAEE,KAAC,SAAD,KAFF,EAGE,KAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA0B,MAAA,WAAW,EAAC,yBAAtC;AAAuD,MAAA,OAAO,EAAER,OAAhE;AAAyE,MAAA,eAAe,EAAE,KAA1F;AAAiG,MAAA,KAAK,EAAE;AAACS,QAAAA,QAAQ,EAAC;AAAV;AAAxG,MAHF,EAIE,KAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,WAAW,EAAC,WAAvC;AAAgD,MAAA,OAAO,EAAET,OAAzD;AAAkE,MAAA,eAAe,EAAE;AAAnF,MAJF,EAKE,KAAC,WAAD;AAAa,MAAA,OAAO,EAAEC,YAAY,CAACG,cAAD;AAAlC,MALF;AAAA,IADF;AASD","sourcesContent":["import React, {useState} from 'react';\r\nimport {TextInput} from 'react-native-gesture-handler';\r\nimport {View} from '../components/Themed';\r\nimport {useForm,Controller} from 'react-hook-form'\r\nimport {RootTabScreenProps} from '../types';\r\nimport {containerStyles} from '../styles/element/containerStyle';\r\nimport UserInput from '../components/input/userInputComp';\r\nimport LoginButton from '../components/button/loginButtonComp';\r\nimport LoginText from '../components/texts/LoginTextsComp';\r\nimport GradientBack from '../components/linegradient/linegradent';\r\n\r\nexport default function LoginScreen({ navigation }: RootTabScreenProps<'LoginScreen'>) {\r\n  const {control,handleSubmit, formState: {errors}} = useForm();\r\n  const onLoginPressed = (data: any) =>{\r\n    console.log(data)\r\n    // validation \r\n\r\n    \r\n    //navigation.navigate(\"HomeScreen\");\r\n  };\r\n\r\n  return (\r\n    <View style={containerStyles.container}>\r\n      <GradientBack/>\r\n      <LoginText/>\r\n      <UserInput name=\"username\"placeholder=\"felhasználónév\" control={control} secureTextEntry={false} rules={{required:true}}/>\r\n      <UserInput name=\"password\" placeholder=\"jelszó\" control={control} secureTextEntry={true}/>\r\n      <LoginButton onPress={handleSubmit(onLoginPressed)}/>\r\n    </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}