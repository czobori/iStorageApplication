{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar AccordingToTheBrand = function (_Component) {\n  _inherits(AccordingToTheBrand, _Component);\n\n  var _super = _createSuper(AccordingToTheBrand);\n\n  function AccordingToTheBrand() {\n    var _this;\n\n    _classCallCheck(this, AccordingToTheBrand);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n\n    _this.fetchData = function _callee() {\n      var response, users;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/accordingToTheBrand'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              users = _context.sent;\n\n              _this.setState({\n                data: users\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(AccordingToTheBrand, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pieData = [{\n        name: 'Seoul',\n        population: 21500000,\n        color: 'rgba(131, 167, 234, 1)',\n        legendFontColor: '#7F7F7F',\n        legendFontSize: 15\n      }, {\n        name: 'Toronto',\n        population: 2800000,\n        color: '#F00',\n        legendFontColor: '#7F7F7F',\n        legendFontSize: 15\n      }, {\n        name: 'Beijing',\n        population: 527612,\n        color: 'red',\n        legendFontColor: '#7F7F7F',\n        legendFontSize: 15\n      }, {\n        name: 'New York',\n        population: 8538000,\n        color: '#ffffff',\n        legendFontColor: '#7F7F7F',\n        legendFontSize: 15\n      }, {\n        name: 'Moscow',\n        population: 11920000,\n        color: 'rgb(0, 0, 255)',\n        legendFontColor: '#7F7F7F',\n        legendFontSize: 15\n      }];\n      return _jsx(View, {\n        children: _jsx(PieChart, {\n          data: pieData,\n          chartConfig: chartConfig,\n          accessor: \"population\",\n          backgroundColor: \"transparent\",\n          paddingLeft: \"15\",\n          absolute: true\n        })\n      });\n    }\n  }]);\n\n  return AccordingToTheBrand;\n}(Component);\n\nexport { AccordingToTheBrand as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/Diagram.js"],"names":["React","Component","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","AccordingToTheBrand","state","data","fetchData","fetch","response","json","users","setState","pieData","name","population","color","legendFontColor","legendFontSize","chartConfig"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,QAA3B,EAAoCC,aAApC,EAAkDC,iBAAlD,EAAoEC,eAApE,QAA0F,wBAA1F;;;IACqBC,mB;;;;;;;;;;;;;;;UAEnBC,K,GAAO;AACLC,MAAAA,IAAI,EAAC;AADA,K;;UAIPC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,2CAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEWA,QAAQ,CAACC,IAAT,EAFX;;AAAA;AAEHC,cAAAA,KAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,IAAI,EAAEK;AAAP,eAAd;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAMX,6BAAmB;AACjB,WAAKJ,SAAL;AACD;;;WAED,kBAAS;AACP,UAAMM,OAAO,GAAG,CACZ;AACEC,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,UAAU,EAAE,QAFd;AAGEC,QAAAA,KAAK,EAAE,wBAHT;AAIEC,QAAAA,eAAe,EAAE,SAJnB;AAKEC,QAAAA,cAAc,EAAE;AALlB,OADY,EAQZ;AACEJ,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,UAAU,EAAE,OAFd;AAGEC,QAAAA,KAAK,EAAE,MAHT;AAIEC,QAAAA,eAAe,EAAE,SAJnB;AAKEC,QAAAA,cAAc,EAAE;AALlB,OARY,EAeZ;AACEJ,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,UAAU,EAAE,MAFd;AAGEC,QAAAA,KAAK,EAAE,KAHT;AAIEC,QAAAA,eAAe,EAAE,SAJnB;AAKEC,QAAAA,cAAc,EAAE;AALlB,OAfY,EAsBZ;AACEJ,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,UAAU,EAAE,OAFd;AAGEC,QAAAA,KAAK,EAAE,SAHT;AAIEC,QAAAA,eAAe,EAAE,SAJnB;AAKEC,QAAAA,cAAc,EAAE;AALlB,OAtBY,EA6BZ;AACEJ,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,UAAU,EAAE,QAFd;AAGEC,QAAAA,KAAK,EAAE,gBAHT;AAIEC,QAAAA,eAAe,EAAE,SAJnB;AAKEC,QAAAA,cAAc,EAAE;AALlB,OA7BY,CAAhB;AAqCA,aACI,KAAC,IAAD;AAAA,kBACI,KAAC,QAAD;AACI,UAAA,IAAI,EAAEL,OADV;AAEI,UAAA,WAAW,EAAEM,WAFjB;AAGI,UAAA,QAAQ,EAAC,YAHb;AAII,UAAA,eAAe,EAAC,aAJpB;AAKI,UAAA,WAAW,EAAC,IALhB;AAMI,UAAA,QAAQ;AANZ;AADJ,QADJ;AAYD;;;;EAlE8CtB,S;;SAA5BO,mB","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View} from 'react-native';\r\nimport {LineChart,BarChart,PieChart,ProgressChart,ContributionGraph,StackedBarChart} from \"react-native-chart-kit\";\r\nexport default class AccordingToTheBrand extends Component {\r\n\r\n  state ={\r\n    data:[]\r\n  }\r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:4550/accordingToTheBrand');\r\n    const users = await response.json();\r\n    this.setState({data: users});\r\n    \r\n  }\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    const pieData = [\r\n        {\r\n          name: 'Seoul',\r\n          population: 21500000,\r\n          color: 'rgba(131, 167, 234, 1)',\r\n          legendFontColor: '#7F7F7F',\r\n          legendFontSize: 15,\r\n        },\r\n        {\r\n          name: 'Toronto',\r\n          population: 2800000,\r\n          color: '#F00',\r\n          legendFontColor: '#7F7F7F',\r\n          legendFontSize: 15,\r\n        },\r\n        {\r\n          name: 'Beijing',\r\n          population: 527612,\r\n          color: 'red',\r\n          legendFontColor: '#7F7F7F',\r\n          legendFontSize: 15,\r\n        },\r\n        {\r\n          name: 'New York',\r\n          population: 8538000,\r\n          color: '#ffffff',\r\n          legendFontColor: '#7F7F7F',\r\n          legendFontSize: 15,\r\n        },\r\n        {\r\n          name: 'Moscow',\r\n          population: 11920000,\r\n          color: 'rgb(0, 0, 255)',\r\n          legendFontColor: '#7F7F7F',\r\n          legendFontSize: 15,\r\n        },\r\n      ];\r\n    return (\r\n        <View>\r\n            <PieChart\r\n                data={pieData}\r\n                chartConfig={chartConfig}\r\n                accessor=\"population\"\r\n                backgroundColor=\"transparent\"\r\n                paddingLeft=\"15\"\r\n                absolute\r\n            />\r\n        </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}