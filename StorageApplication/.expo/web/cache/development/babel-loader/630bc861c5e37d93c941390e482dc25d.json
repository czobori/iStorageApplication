{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Progress from 'react-native-progress';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar WarehouseSaturation = function (_Component) {\n  _inherits(WarehouseSaturation, _Component);\n\n  var _super = _createSuper(WarehouseSaturation);\n\n  function WarehouseSaturation() {\n    var _this;\n\n    _classCallCheck(this, WarehouseSaturation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      szam: 0\n    };\n\n    _this.fetchData = function _callee() {\n      var currently, somuch;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = _regeneratorRuntime;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/currentlyInStock'));\n\n            case 3:\n              _context.t1 = _context.sent.json();\n              _context.next = 6;\n              return _context.t0.awrap.call(_context.t0, _context.t1);\n\n            case 6:\n              currently = _context.sent;\n              _context.t2 = _regeneratorRuntime;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/soMuchSpace'));\n\n            case 10:\n              _context.t3 = _context.sent.json();\n              _context.next = 13;\n              return _context.t2.awrap.call(_context.t2, _context.t3);\n\n            case 13:\n              somuch = _context.sent;\n\n              _this.setState({\n                szam: (currently + somuch) / 100\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(WarehouseSaturation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Rakt\\xE1r telts\\xE9ge\"\n        }), _jsx(Text, {\n          children: this.state.szam\n        }), _jsx(Progress.Bar, {\n          progress: this.state.szam\n        })]\n      });\n    }\n  }]);\n\n  return WarehouseSaturation;\n}(Component);\n\nexport { WarehouseSaturation as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/WarehouseFull.js"],"names":["React","Component","Progress","WarehouseSaturation","state","szam","fetchData","fetch","json","currently","somuch","setState"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;;;;IAGqBC,mB;;;;;;;;;;;;;;;UACjBC,K,GAAO;AACHC,MAAAA,IAAI,EAAC;AADF,K;;UAIPC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBC,KAAK,CAAE,wCAAF,CAD7B;;AAAA;AAAA,0CAC0EC,IAD1E;AAAA;AAAA;;AAAA;AACDC,cAAAA,SADC;AAAA;AAAA;AAAA,+CAEqBF,KAAK,CAAC,mCAAD,CAF1B;;AAAA;AAAA,0CAEiEC,IAFjE;AAAA;AAAA;;AAAA;AAEDE,cAAAA,MAFC;;AAGP,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,IAAI,EAAE,CAACI,SAAS,GAACC,MAAX,IAAmB;AAA1B,eAAd;;AAHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAKX,6BAAmB;AACf,WAAKJ,SAAL;AACH;;;WAED,kBAAQ;AAEJ,aACI,MAAC,IAAD;AAAA,mBACA,KAAC,IAAD;AAAA;AAAA,UADA,EAEA,KAAC,IAAD;AAAA,oBAAO,KAAKF,KAAL,CAAWC;AAAlB,UAFA,EAGA,KAAC,QAAD,CAAU,GAAV;AAAc,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAAnC,UAHA;AAAA,QADJ;AAOH;;;;EAvB4CJ,S;;SAA5BE,mB","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View} from 'react-native';\r\nimport * as Progress from 'react-native-progress';\r\n\r\n\r\nexport default class WarehouseSaturation extends Component{\r\n    state ={\r\n        szam:0\r\n    }\r\n    \r\n    fetchData= async()=>{\r\n        const currently = await (await fetch ('http://localhost:4550/currentlyInStock')).json();\r\n        const somuch = await (await fetch('http://localhost:4550/soMuchSpace')).json();\r\n        this.setState({szam: (currently+somuch)/100});\r\n    }\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <View>\r\n            <Text>Raktár teltsége</Text>\r\n            <Text>{this.state.szam}</Text>\r\n            <Progress.Bar progress={this.state.szam}/>\r\n        </View>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}