{"ast":null,"code":"import React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Controller } from 'react-hook-form';\nimport { loginPageStyles } from \"../../styles/screenStyles/loginStyles\";\nimport * as Colors from \"../../const/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar UserInput = function UserInput(_ref) {\n  var control = _ref.control,\n      name = _ref.name,\n      _ref$rules = _ref.rules,\n      rules = _ref$rules === void 0 ? {} : _ref$rules,\n      placeholder = _ref.placeholder,\n      secureTextEntry = _ref.secureTextEntry;\n  return _jsx(Controller, {\n    control: control,\n    name: name,\n    rules: rules,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          value = _ref2$field.value,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          error = _ref2.fieldState.error;\n      return _jsx(_Fragment, {\n        children: _jsxs(View, {\n          children: [_jsx(TextInput, {\n            value: value,\n            onChangeText: onChange,\n            onBlur: onBlur,\n            secureTextEntry: secureTextEntry,\n            placeholder: placeholder,\n            placeholderTextColor: \"#F4F6F7\",\n            style: [loginPageStyles.input, {\n              borderColor: error ? Colors.errorred : Colors.inputborder\n            }, {\n              borderWidth: error ? 2 : 1\n            }]\n          }), error && _jsx(Text, {\n            style: loginPageStyles.errortext,\n            children: error.message || 'Hiba!'\n          })]\n        })\n      });\n    }\n  });\n};\n\nexport default UserInput;","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/components/input/userInputComp.js"],"names":["React","Controller","loginPageStyles","Colors","UserInput","control","name","rules","placeholder","secureTextEntry","field","value","onChange","onBlur","error","fieldState","input","borderColor","errorred","inputborder","borderWidth","errortext","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,SAASC,eAAT;AACA,OAAO,KAAKC,MAAZ;;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAwD;AAAA,MAAtDC,OAAsD,QAAtDA,OAAsD;AAAA,MAA9CC,IAA8C,QAA9CA,IAA8C;AAAA,wBAAzCC,KAAyC;AAAA,MAAzCA,KAAyC,2BAAnC,EAAmC;AAAA,MAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,MAApBC,eAAoB,QAApBA,eAAoB;AAEtE,SACI,KAAC,UAAD;AAAY,IAAA,OAAO,EAAEJ,OAArB;AAA8B,IAAA,IAAI,EAAEC,IAApC;AAA0C,IAAA,KAAK,EAAEC,KAAjD;AAAwD,IAAA,MAAM,EAAE;AAAA,8BAAEG,KAAF;AAAA,UAAUC,KAAV,eAAUA,KAAV;AAAA,UAAgBC,QAAhB,eAAgBA,QAAhB;AAAA,UAAyBC,MAAzB,eAAyBA,MAAzB;AAAA,UAA6CC,KAA7C,SAAiCC,UAAjC,CAA6CD,KAA7C;AAAA,aAC5D;AAAA,kBACI,MAAC,IAAD;AAAA,qBACI,KAAC,SAAD;AAAW,YAAA,KAAK,EAAEH,KAAlB;AAAyB,YAAA,YAAY,EAAEC,QAAvC;AAAiD,YAAA,MAAM,EAAEC,MAAzD;AAAiE,YAAA,eAAe,EAAEJ,eAAlF;AACI,YAAA,WAAW,EAAED,WADjB;AAC8B,YAAA,oBAAoB,EAAC,SADnD;AAEI,YAAA,KAAK,EAAE,CAACN,eAAe,CAACc,KAAjB,EACP;AAACC,cAAAA,WAAW,EAAEH,KAAK,GAAGX,MAAM,CAACe,QAAV,GAAmBf,MAAM,CAACgB;AAA7C,aADO,EACmD;AAACC,cAAAA,WAAW,EAAEN,KAAK,GAAE,CAAF,GAAM;AAAzB,aADnD;AAFX,YADJ,EAKKA,KAAK,IAAK,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEZ,eAAe,CAACmB,SAA7B;AAAA,sBAAyCP,KAAK,CAACQ,OAAN,IAAiB;AAA1D,YALf;AAAA;AADJ,QAD4D;AAAA;AAAhE,IADJ;AAaH,CAfD;;AAgBA,eAAelB,SAAf","sourcesContent":["import React from 'react';\r\nimport {TextInput,View,Text} from 'react-native';\r\nimport {Controller} from 'react-hook-form'\r\nimport { loginPageStyles } from '../../styles/screenStyles/loginStyles';\r\nimport * as Colors from \"../../const/colors\";\r\n\r\nconst UserInput = ({control,name,rules={},placeholder,secureTextEntry}) =>{\r\n    \r\n    return (\r\n        <Controller control={control} name={name} rules={rules} render={({field: {value,onChange,onBlur},fieldState:{error}})=>(\r\n            <>\r\n                <View>\r\n                    <TextInput value={value} onChangeText={onChange} onBlur={onBlur} secureTextEntry={secureTextEntry}\r\n                        placeholder={placeholder} placeholderTextColor=\"#F4F6F7\"\r\n                        style={[loginPageStyles.input,\r\n                        {borderColor: error ? Colors.errorred:Colors.inputborder},{borderWidth: error? 2 : 1}]}/>\r\n                    {error && (<Text style={loginPageStyles.errortext}>{error.message || 'Hiba!'}</Text>)}\r\n                </View>\r\n            </>\r\n        )}/>\r\n    )\r\n}\r\nexport default UserInput;"]},"metadata":{},"sourceType":"module"}