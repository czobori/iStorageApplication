{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ProgressCircle from 'react-native-progress-circle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get(\"window\").width;\n\nvar AccordingToTheBrand = function (_Component) {\n  _inherits(AccordingToTheBrand, _Component);\n\n  var _super = _createSuper(AccordingToTheBrand);\n\n  function AccordingToTheBrand() {\n    var _this;\n\n    _classCallCheck(this, AccordingToTheBrand);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n\n    _this.fetchData = function _callee() {\n      var response, diagramdata;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/accordingToTheBrand'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              diagramdata = _context.sent;\n\n              _this.setState({\n                data: diagramdata\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(AccordingToTheBrand, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var arr = this.state.data;\n\n      var brandNames = function brandNames() {\n        return arr.map(function (x) {\n          return x.brand_name;\n        });\n      };\n\n      var berendeltDbs = function berendeltDbs() {\n        return arr.map(function (x) {\n          return x.berendeltDb;\n        });\n      };\n\n      console.log(brandNames());\n      console.log(berendeltDbs());\n      var data = {\n        labels: brandNames,\n        data: berendeltDbs\n      };\n      console.log(data);\n      var chartConfig = {\n        backgroundGradientFrom: \"#1E2923\",\n        backgroundGradientFromOpacity: 0,\n        backgroundGradientTo: \"#08130D\",\n        backgroundGradientToOpacity: 0.5,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(26, 255, 146, \" + opacity + \")\";\n        },\n        strokeWidth: 2,\n        barPercentage: 0.5,\n        useShadowColorFromDataset: false\n      };\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Berendelt m\\xE1rk\\xE1ink\"\n        }), _jsx(ProgressCircle, {\n          percent: 30,\n          radius: 50,\n          borderWidth: 8,\n          color: \"#3399FF\",\n          shadowColor: \"#999\",\n          bgColor: \"#fff\",\n          children: _jsx(Text, {\n            style: {\n              fontSize: 18\n            },\n            children: '30%'\n          })\n        })]\n      });\n    }\n  }]);\n\n  return AccordingToTheBrand;\n}(Component);\n\nexport { AccordingToTheBrand as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/Diagram.js"],"names":["React","Component","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","ProgressCircle","screenWidth","Dimensions","get","width","AccordingToTheBrand","state","data","fetchData","fetch","response","json","diagramdata","setState","arr","brandNames","map","x","brand_name","berendeltDbs","berendeltDb","console","log","labels","chartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","color","opacity","strokeWidth","barPercentage","useShadowColorFromDataset","fontSize"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,QAA3B,EAAoCC,aAApC,EAAkDC,iBAAlD,EAAoEC,eAApE,QAA0F,wBAA1F;;AAGA,OAAOC,cAAP,MAA2B,8BAA3B;;;AAEA,IAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;;IACqBC,mB;;;;;;;;;;;;;;;UAEpBC,K,GAAO;AACJC,MAAAA,IAAI,EAAC;AADD,K;;UAINC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,2CAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEiBA,QAAQ,CAACC,IAAT,EAFjB;;AAAA;AAEHC,cAAAA,WAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,IAAI,EAAEK;AAAP,eAAd;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAMX,6BAAmB;AACjB,WAAKJ,SAAL;AACD;;;WAED,kBAAS;AACP,UAAMM,GAAG,GAAG,KAAKR,KAAL,CAAWC,IAAvB;;AACA,UAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,eAAOD,GAAG,CAACE,GAAJ,CAAQ,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,UAAN;AAAA,SAAT,CAAP;AACD,OAFD;;AAIA,UAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,eAAOL,GAAG,CAACE,GAAJ,CAAQ,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACG,WAAN;AAAA,SAAT,CAAP;AACD,OAFD;;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,UAAU,EAAtB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,EAAxB;AAEA,UAAMZ,IAAI,GAAG;AACXgB,QAAAA,MAAM,EAAER,UADG;AAEXR,QAAAA,IAAI,EAAEY;AAFK,OAAb;AAIAE,MAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AAEA,UAAMiB,WAAW,GAAG;AAClBC,QAAAA,sBAAsB,EAAE,SADN;AAElBC,QAAAA,6BAA6B,EAAE,CAFb;AAGlBC,QAAAA,oBAAoB,EAAE,SAHJ;AAIlBC,QAAAA,2BAA2B,EAAE,GAJX;AAKlBC,QAAAA,KAAK,EAAE;AAAA,cAACC,OAAD,uEAAW,CAAX;AAAA,yCAAuCA,OAAvC;AAAA,SALW;AAMlBC,QAAAA,WAAW,EAAE,CANK;AAOlBC,QAAAA,aAAa,EAAE,GAPG;AAQlBC,QAAAA,yBAAyB,EAAE;AART,OAApB;AAUA,aACI,MAAC,IAAD;AAAA,mBACI,KAAC,IAAD;AAAA;AAAA,UADJ,EAEI,KAAC,cAAD;AACE,UAAA,OAAO,EAAE,EADX;AACe,UAAA,MAAM,EAAE,EADvB;AAC2B,UAAA,WAAW,EAAE,CADxC;AAC2C,UAAA,KAAK,EAAC,SADjD;AAC2D,UAAA,WAAW,EAAC,MADvE;AAC8E,UAAA,OAAO,EAAC,MADtF;AAAA,oBAEC,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aAAb;AAAA,sBAAgC;AAAhC;AAFD,UAFJ;AAAA,QADJ;AAUD;;;;EAvD8CzC,S;;SAA5BY,mB","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View} from 'react-native';\r\nimport {LineChart,BarChart,PieChart,ProgressChart,ContributionGraph,StackedBarChart} from \"react-native-chart-kit\";\r\n//import PieChart from 'react-native-pie-chart';\r\nimport { Dimensions } from \"react-native\";\r\nimport ProgressCircle from 'react-native-progress-circle';\r\n\r\nconst screenWidth = Dimensions.get(\"window\").width;\r\nexport default class AccordingToTheBrand extends Component {\r\n\r\n state ={\r\n    data:[]\r\n  }\r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:4550/accordingToTheBrand');\r\n    const diagramdata = await response.json();\r\n    this.setState({data: diagramdata});\r\n    \r\n  }\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    const arr = this.state.data;\r\n    const brandNames = () => {\r\n      return arr.map(x => x.brand_name);\r\n    }\r\n    \r\n    const berendeltDbs = () => {\r\n      return arr.map(x => x.berendeltDb);\r\n    }\r\n    \r\n    console.log(brandNames());\r\n    console.log(berendeltDbs());\r\n\r\n    const data = {\r\n      labels: brandNames,\r\n      data: berendeltDbs\r\n    };\r\n    console.log(data);\r\n\r\n    const chartConfig = {\r\n      backgroundGradientFrom: \"#1E2923\",\r\n      backgroundGradientFromOpacity: 0,\r\n      backgroundGradientTo: \"#08130D\",\r\n      backgroundGradientToOpacity: 0.5,\r\n      color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\r\n      strokeWidth: 2, // optional, default 3\r\n      barPercentage: 0.5,\r\n      useShadowColorFromDataset: false // optional\r\n    };\r\n    return (\r\n        <View>\r\n            <Text>Berendelt márkáink</Text>\r\n            <ProgressCircle\r\n              percent={30} radius={50} borderWidth={8} color=\"#3399FF\" shadowColor=\"#999\" bgColor=\"#fff\"\r\n            ><Text style={{ fontSize: 18 }}>{'30%'}</Text>\r\n            </ProgressCircle>\r\n        </View>\r\n       \r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}