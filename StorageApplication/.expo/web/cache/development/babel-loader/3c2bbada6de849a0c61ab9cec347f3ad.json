{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { ProgressChart } from 'react-native-chart-kit';\nimport { progressCartConfig } from \"../const/ChartKitConfig\";\nimport { homePageStyles } from \"../styles/screenStyles/homeStyle\";\nimport BrandInfoText from \"../components/texts/BrandProgressInfoTextCom\";\nimport { url } from \"../const/url\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChartBrand = function (_Component) {\n  _inherits(ChartBrand, _Component);\n\n  var _super = _createSuper(ChartBrand);\n\n  function ChartBrand() {\n    var _this;\n\n    _classCallCheck(this, ChartBrand);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [],\n      osszes: 0\n    };\n\n    _this.fetchData = function _callee() {\n      var response, diagramdata, currently;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(url + '/accordingToTheBrand'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              diagramdata = _context.sent;\n\n              _this.setState({\n                data: diagramdata\n              });\n\n              _context.t0 = _regeneratorRuntime;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(fetch(url + '/currentlyInStock'));\n\n            case 10:\n              _context.t1 = _context.sent.json();\n              _context.next = 13;\n              return _context.t0.awrap.call(_context.t0, _context.t1);\n\n            case 13:\n              currently = _context.sent;\n\n              _this.setState({\n                osszes: currently.number\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(ChartBrand, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var arr = this.state.data;\n\n      var brandNames = function brandNames() {\n        return arr.map(function (x) {\n          return x.brand_name;\n        });\n      };\n\n      var berendeltDbs = function berendeltDbs() {\n        return arr.map(function (x) {\n          return x.berendeltDb / _this2.state.osszes;\n        });\n      };\n\n      var data = {\n        labels: brandNames(),\n        data: berendeltDbs()\n      };\n      return _jsxs(View, {\n        style: homePageStyles.div,\n        children: [_jsx(BrandInfoText, {}), _jsx(ProgressChart, {\n          data: data,\n          width: Dimensions.get('window').width - 70,\n          height: Dimensions.get('window').height / 2,\n          chartConfig: progressCartConfig,\n          style: {\n            borderRadius: 16\n          },\n          strokeWidth: 10\n        })]\n      });\n    }\n  }]);\n\n  return ChartBrand;\n}(Component);\n\nexport { ChartBrand as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/BrandProgressChart.js"],"names":["React","Component","ProgressChart","progressCartConfig","homePageStyles","BrandInfoText","url","ChartBrand","state","data","osszes","fetchData","fetch","response","json","diagramdata","setState","currently","number","arr","brandNames","map","x","brand_name","berendeltDbs","berendeltDb","labels","div","Dimensions","get","width","height","borderRadius"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,SAASC,kBAAT;AACA,SAASC,cAAT;AACA,OAAOC,aAAP;AACA,SAASC,GAAT;;;;IACqBC,U;;;;;;;;;;;;;;;UACnBC,K,GAAO;AACLC,MAAAA,IAAI,EAAC,EADA;AAELC,MAAAA,MAAM,EAAC;AAFF,K;;UAIPC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAACN,GAAG,GAAC,sBAAL,CADnB;;AAAA;AACHO,cAAAA,QADG;AAAA;AAAA,+CAEiBA,QAAQ,CAACC,IAAT,EAFjB;;AAAA;AAEHC,cAAAA,WAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACP,gBAAAA,IAAI,EAAEM;AAAP,eAAd;;AAHS;AAAA;AAAA,+CAIsBH,KAAK,CAAEN,GAAG,GAAC,mBAAN,CAJ3B;;AAAA;AAAA,0CAIuDQ,IAJvD;AAAA;AAAA;;AAAA;AAIHG,cAAAA,SAJG;;AAKT,oBAAKD,QAAL,CAAc;AAACN,gBAAAA,MAAM,EAACO,SAAS,CAACC;AAAlB,eAAd;;AALS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAOX,6BAAmB;AAAC,WAAKP,SAAL;AAAkB;;;WAEtC,kBAAS;AAAA;;AACP,UAAMQ,GAAG,GAAG,KAAKX,KAAL,CAAWC,IAAvB;;AACA,UAAMW,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAC,eAAOD,GAAG,CAACE,GAAJ,CAAQ,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,UAAN;AAAA,SAAT,CAAP;AAAmC,OAA7D;;AACA,UAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAC,eAAOL,GAAG,CAACE,GAAJ,CAAQ,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACG,WAAF,GAAc,MAAI,CAACjB,KAAL,CAAWE,MAA7B;AAAA,SAAT,CAAP;AAAsD,OAAlF;;AACA,UAAMD,IAAI,GAAG;AAACiB,QAAAA,MAAM,EAAEN,UAAU,EAAnB;AAAsBX,QAAAA,IAAI,EAAEe,YAAY;AAAxC,OAAb;AACA,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEpB,cAAc,CAACuB,GAA5B;AAAA,mBACE,KAAC,aAAD,KADF,EAEE,KAAC,aAAD;AAAe,UAAA,IAAI,EAAElB,IAArB;AACE,UAAA,KAAK,EAAEmB,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAA+B,EADxC;AAC6C,UAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBE,MAAzB,GAAgC,CADrF;AAEE,UAAA,WAAW,EAAE5B,kBAFf;AAEmC,UAAA,KAAK,EAAE;AAAC6B,YAAAA,YAAY,EAAE;AAAf,WAF1C;AAE8D,UAAA,WAAW,EAAG;AAF5E,UAFF;AAAA,QADF;AAQD;;;;EA3BqC/B,S;;SAAnBM,U","sourcesContent":["import React, {Component} from 'react';\r\nimport {View,Dimensions} from 'react-native';\r\nimport {ProgressChart} from 'react-native-chart-kit'\r\nimport { progressCartConfig } from '../const/ChartKitConfig';\r\nimport { homePageStyles } from '../styles/screenStyles/homeStyle';\r\nimport BrandInfoText from '../components/texts/BrandProgressInfoTextCom';\r\nimport { url } from '../const/url';\r\nexport default class ChartBrand extends Component {\r\n  state ={\r\n    data:[],\r\n    osszes:0\r\n  }\r\n  fetchData= async()=>{\r\n    const response = await fetch(url+'/accordingToTheBrand');\r\n    const diagramdata = await response.json();\r\n    this.setState({data: diagramdata});\r\n    const currently = await (await fetch (url+'/currentlyInStock')).json();\r\n    this.setState({osszes:currently.number});\r\n  }\r\n  componentDidMount(){this.fetchData();}\r\n\r\n  render() {\r\n    const arr = this.state.data;\r\n    const brandNames = () => {return arr.map(x => x.brand_name);}\r\n    const berendeltDbs = () => {return arr.map(x => x.berendeltDb/this.state.osszes);}\r\n    const data = {labels: brandNames(),data: berendeltDbs(),};\r\n    return (\r\n      <View style={homePageStyles.div}>\r\n        <BrandInfoText/>\r\n        <ProgressChart data={data}\r\n          width={Dimensions.get('window').width-70 } height={Dimensions.get('window').height/2} \r\n          chartConfig={progressCartConfig} style={{borderRadius: 16}} strokeWidth= {10}/>\r\n      </View>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}