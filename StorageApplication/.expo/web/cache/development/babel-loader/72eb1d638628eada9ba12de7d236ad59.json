{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AccordingToTheBrand = function (_Component) {\n  _inherits(AccordingToTheBrand, _Component);\n\n  var _super = _createSuper(AccordingToTheBrand);\n\n  function AccordingToTheBrand() {\n    var _this;\n\n    _classCallCheck(this, AccordingToTheBrand);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n\n    _this.fetchData = function _callee() {\n      var response, users;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/accordingToTheBrand'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              users = _context.sent;\n\n              _this.setState({\n                data: users\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(AccordingToTheBrand, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var line = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n        datasets: [{\n          data: [20, 45, 28, 80, 99, 43],\n          strokeWidth: 2\n        }]\n      };\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Bezier Line Chart\"\n        }), _jsx(LineChart, {\n          data: linedata,\n          width: Dimensions.get('window').width,\n          height: 220,\n          yAxisLabel: '$',\n          chartConfig: {\n            backgroundColor: '#e26a00',\n            backgroundGradientFrom: '#fb8c00',\n            backgroundGradientTo: '#ffa726',\n            decimalPlaces: 2,\n            color: function color() {\n              var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n              return \"rgba(255, 255, 255, \" + opacity + \")\";\n            },\n            style: {\n              borderRadius: 16\n            }\n          },\n          bezier: true,\n          style: {\n            marginVertical: 8,\n            borderRadius: 16\n          }\n        })]\n      });\n    }\n  }]);\n\n  return AccordingToTheBrand;\n}(Component);\n\nexport { AccordingToTheBrand as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/Diagram.js"],"names":["React","Component","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","AccordingToTheBrand","state","data","fetchData","fetch","response","json","users","setState","line","labels","datasets","strokeWidth","linedata","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","marginVertical"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,QAA3B,EAAoCC,aAApC,EAAkDC,iBAAlD,EAAoEC,eAApE,QAA0F,wBAA1F;;;;IACqBC,mB;;;;;;;;;;;;;;;UAEnBC,K,GAAO;AACLC,MAAAA,IAAI,EAAC;AADA,K;;UAIPC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,2CAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEWA,QAAQ,CAACC,IAAT,EAFX;;AAAA;AAEHC,cAAAA,KAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,IAAI,EAAEK;AAAP,eAAd;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAMX,6BAAmB;AACjB,WAAKJ,SAAL;AACD;;;WAED,kBAAS;AACP,UAAMM,IAAI,GAAG;AACTC,QAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,CADC;AAETC,QAAAA,QAAQ,EAAE,CACR;AACET,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CADR;AAEEU,UAAAA,WAAW,EAAE;AAFf,SADQ;AAFD,OAAb;AASA,aACE,MAAC,IAAD;AAAA,mBACG,KAAC,IAAD;AAAA;AAAA,UADH,EAEM,KAAC,SAAD;AACI,UAAA,IAAI,EAAEC,QADV;AAEI,UAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAFpC;AAGI,UAAA,MAAM,EAAE,GAHZ;AAII,UAAA,UAAU,EAAE,GAJhB;AAKI,UAAA,WAAW,EAAE;AACbC,YAAAA,eAAe,EAAE,SADJ;AAEbC,YAAAA,sBAAsB,EAAE,SAFX;AAGbC,YAAAA,oBAAoB,EAAE,SAHT;AAIbC,YAAAA,aAAa,EAAE,CAJF;AAKbC,YAAAA,KAAK,EAAE;AAAA,kBAACC,OAAD,uEAAW,CAAX;AAAA,8CAAwCA,OAAxC;AAAA,aALM;AAMbC,YAAAA,KAAK,EAAE;AACHC,cAAAA,YAAY,EAAE;AADX;AANM,WALjB;AAeI,UAAA,MAAM,MAfV;AAgBI,UAAA,KAAK,EAAE;AACPC,YAAAA,cAAc,EAAE,CADT;AAEPD,YAAAA,YAAY,EAAE;AAFP;AAhBX,UAFN;AAAA,QADF;AAuCD;;;;EAjE8C/B,S;;SAA5BO,mB","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View} from 'react-native';\r\nimport {LineChart,BarChart,PieChart,ProgressChart,ContributionGraph,StackedBarChart} from \"react-native-chart-kit\";\r\nexport default class AccordingToTheBrand extends Component {\r\n\r\n  state ={\r\n    data:[]\r\n  }\r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:4550/accordingToTheBrand');\r\n    const users = await response.json();\r\n    this.setState({data: users});\r\n    \r\n  }\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    const line = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n        datasets: [\r\n          {\r\n            data: [20, 45, 28, 80, 99, 43],\r\n            strokeWidth: 2, // optional\r\n          },\r\n        ],\r\n      };\r\n    return (\r\n      <View>\r\n         <Text>Bezier Line Chart</Text>\r\n            <LineChart\r\n                data={linedata}\r\n                width={Dimensions.get('window').width} // from react-native\r\n                height={220}\r\n                yAxisLabel={'$'}\r\n                chartConfig={{\r\n                backgroundColor: '#e26a00',\r\n                backgroundGradientFrom: '#fb8c00',\r\n                backgroundGradientTo: '#ffa726',\r\n                decimalPlaces: 2, // optional, defaults to 2dp\r\n                color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                style: {\r\n                    borderRadius: 16\r\n                }\r\n                }}\r\n                bezier\r\n                style={{\r\n                marginVertical: 8,\r\n                borderRadius: 16\r\n                }}\r\n            />\r\n        {/*<FlatList\r\n          data={this.state.data}\r\n          keyExtractor={(item,index) => index.toString()}\r\n          renderItem={({item}) =>\r\n\r\n            <View style={userComponentStyles.div}>\r\n              <Text>{item.full_name}</Text>\r\n              <Text>  felhasználónév: {item.username}</Text>\r\n              <Text>  email: {item.email}</Text>\r\n              <Text>  telefon: {item.phone_number}</Text>\r\n            </View>\r\n          }  \r\n        />*/}\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}