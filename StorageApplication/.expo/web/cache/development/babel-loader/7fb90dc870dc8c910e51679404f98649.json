{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Fontisto } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar UsersNumber = function (_Component) {\n  _inherits(UsersNumber, _Component);\n\n  var _super = _createSuper(UsersNumber);\n\n  function UsersNumber() {\n    var _this;\n\n    _classCallCheck(this, UsersNumber);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      ember: 0\n    };\n\n    _this.fetchData = function _callee() {\n      var person;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = _regeneratorRuntime;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/workersNumber'));\n\n            case 3:\n              _context.t1 = _context.sent.json();\n              _context.next = 6;\n              return _context.t0.awrap.call(_context.t0, _context.t1);\n\n            case 6:\n              person = _context.sent;\n\n              _this.setState({\n                ember: person.workersCount\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(UsersNumber, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        children: [_jsx(Fontisto, {\n          name: \"persons\",\n          size: 24,\n          color: \"black\"\n        }), _jsxs(Text, {\n          children: [\"A rakt\\xE1rban \", this.state.ember, \" f\\u0151 dolgozik\"]\n        })]\n      });\n    }\n  }]);\n\n  return UsersNumber;\n}(Component);\n\nexport { UsersNumber as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/WorkersNumber.js"],"names":["React","Component","Fontisto","UsersNumber","state","ember","fetchData","fetch","json","person","setState","workersCount"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;;;;IAEqBC,W;;;;;;;;;;;;;;;UACjBC,K,GAAM;AACFC,MAAAA,KAAK,EAAC;AADJ,K;;UAGNC,S,GAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACmBC,KAAK,CAAE,qCAAF,CADxB;;AAAA;AAAA,0CACkEC,IADlE;AAAA;AAAA;;AAAA;AACFC,cAAAA,MADE;;AAER,oBAAKC,QAAL,CAAc;AAACL,gBAAAA,KAAK,EAACI,MAAM,CAACE;AAAd,eAAd;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAIZ,6BAAmB;AACf,WAAKL,SAAL;AACH;;;WACD,kBAAQ;AACJ,aACI,MAAC,IAAD;AAAA,mBACI,KAAC,QAAD;AAAU,UAAA,IAAI,EAAC,SAAf;AAAyB,UAAA,IAAI,EAAE,EAA/B;AAAmC,UAAA,KAAK,EAAC;AAAzC,UADJ,EAEI,MAAC,IAAD;AAAA,wCAAmB,KAAKF,KAAL,CAAWC,KAA9B;AAAA,UAFJ;AAAA,QADJ;AAMH;;;;EAlBoCJ,S;;SAApBE,W","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View, Dimensions} from 'react-native';\r\nimport { Fontisto } from '@expo/vector-icons';\r\n\r\nexport default class UsersNumber extends Component{\r\n    state={\r\n        ember:0\r\n    }\r\n    fetchData = async()=>{\r\n        const person = await(await fetch ('http://localhost:4550/workersNumber')).json();\r\n        this.setState({ember:person.workersCount});\r\n    }\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n    render(){\r\n        return(\r\n            <View>\r\n                <Fontisto name=\"persons\" size={24} color=\"black\" />\r\n                <Text>A raktárban {this.state.ember} fő dolgozik</Text>\r\n            </View>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}