{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Progress from 'react-native-progress';\nimport WarehouseSaturation from \"./WarehouseFull\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from 'react-native-chart-kit';\nimport { progressCartConfig } from \"../const/ChartKitConfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChartBrand = function (_Component) {\n  _inherits(ChartBrand, _Component);\n\n  var _super = _createSuper(ChartBrand);\n\n  function ChartBrand() {\n    var _this;\n\n    _classCallCheck(this, ChartBrand);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [],\n      osszes: 0\n    };\n\n    _this.fetchData = function _callee() {\n      var response, diagramdata, currently;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/accordingToTheBrand'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              diagramdata = _context.sent;\n\n              _this.setState({\n                data: diagramdata\n              });\n\n              _context.t0 = _regeneratorRuntime;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/currentlyInStock'));\n\n            case 10:\n              _context.t1 = _context.sent.json();\n              _context.next = 13;\n              return _context.t0.awrap.call(_context.t0, _context.t1);\n\n            case 13:\n              currently = _context.sent;\n\n              _this.setState({\n                osszes: currently.number\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(ChartBrand, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var arr = this.state.data;\n\n      var brandNames = function brandNames() {\n        return arr.map(function (x) {\n          return x.brand_name;\n        });\n      };\n\n      var berendeltDbs = function berendeltDbs() {\n        return arr.map(function (x) {\n          return x.berendeltDb / _this2.state.osszes;\n        });\n      };\n\n      var data = {\n        labels: brandNames(),\n        data: berendeltDbs()\n      };\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"M\\xE1rk\\xE1k a rakt\\xE1rban\"\n        }), _jsx(ProgressChart, {\n          data: data,\n          width: Dimensions.get('window').width - 16,\n          height: 220,\n          chartConfig: progressCartConfig,\n          style: {\n            marginVertical: 8,\n            borderRadius: 16\n          },\n          strokeWidth: 15\n        })]\n      });\n    }\n  }]);\n\n  return ChartBrand;\n}(Component);\n\nexport { ChartBrand as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/BrandProgressChart.js"],"names":["React","Component","Progress","WarehouseSaturation","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","progressCartConfig","ChartBrand","state","data","osszes","fetchData","fetch","response","json","diagramdata","setState","currently","number","arr","brandNames","map","x","brand_name","berendeltDbs","berendeltDb","labels","Dimensions","get","width","marginVertical","borderRadius"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,OAAOC,mBAAP;;;;;AAEA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,QAA3B,EAAoCC,aAApC,EAAkDC,iBAAlD,EAAoEC,eAApE,QAA2F,wBAA3F;AACA,SAASC,kBAAT;;;;IACqBC,U;;;;;;;;;;;;;;;UAEnBC,K,GAAO;AACLC,MAAAA,IAAI,EAAC,EADA;AAELC,MAAAA,MAAM,EAAC;AAFF,K;;UAKPC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,2CAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEiBA,QAAQ,CAACC,IAAT,EAFjB;;AAAA;AAEHC,cAAAA,WAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACP,gBAAAA,IAAI,EAAEM;AAAP,eAAd;;AAHS;AAAA;AAAA,+CAIsBH,KAAK,CAAE,wCAAF,CAJ3B;;AAAA;AAAA,0CAIwEE,IAJxE;AAAA;AAAA;;AAAA;AAIHG,cAAAA,SAJG;;AAKL,oBAAKD,QAAL,CAAc;AAACN,gBAAAA,MAAM,EAACO,SAAS,CAACC;AAAlB,eAAd;;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAOX,6BAAmB;AACjB,WAAKP,SAAL;AACD;;;WAED,kBAAS;AAAA;;AACP,UAAMQ,GAAG,GAAG,KAAKX,KAAL,CAAWC,IAAvB;;AACA,UAAMW,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,eAAOD,GAAG,CAACE,GAAJ,CAAQ,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,UAAN;AAAA,SAAT,CAAP;AACD,OAFD;;AAIA,UAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,eAAOL,GAAG,CAACE,GAAJ,CAAQ,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACG,WAAF,GAAc,MAAI,CAACjB,KAAL,CAAWE,MAA7B;AAAA,SAAT,CAAP;AACD,OAFD;;AAIA,UAAMD,IAAI,GAAG;AACXiB,QAAAA,MAAM,EAAEN,UAAU,EADP;AAEXX,QAAAA,IAAI,EAAEe,YAAY;AAFP,OAAb;AAKA,aACE,MAAC,IAAD;AAAA,mBACE,KAAC,IAAD;AAAA;AAAA,UADF,EAEE,KAAC,aAAD;AACE,UAAA,IAAI,EAAEf,IADR;AAEE,UAAA,KAAK,EAAEkB,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiC,EAF1C;AAGE,UAAA,MAAM,EAAE,GAHV;AAIE,UAAA,WAAW,EAAEvB,kBAJf;AAKE,UAAA,KAAK,EAAE;AACLwB,YAAAA,cAAc,EAAE,CADX;AAELC,YAAAA,YAAY,EAAE;AAFT,WALT;AASE,UAAA,WAAW,EAAG;AAThB,UAFF;AAAA,QADF;AAiBD;;;;EAlDqClC,S;;SAAnBU,U","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View} from 'react-native';\r\nimport * as Progress from 'react-native-progress';\r\nimport WarehouseSaturation from './WarehouseFull';\r\nimport {SafeAreaView,StyleSheet,Dimensions, ScrollView,} from 'react-native';\r\nimport {LineChart,BarChart,PieChart,ProgressChart,ContributionGraph,StackedBarChart,} from 'react-native-chart-kit'\r\nimport { progressCartConfig } from '../const/ChartKitConfig';\r\nexport default class ChartBrand extends Component {\r\n\r\n  state ={\r\n    data:[],\r\n    osszes:0\r\n  }\r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:4550/accordingToTheBrand');\r\n    const diagramdata = await response.json();\r\n    this.setState({data: diagramdata});\r\n    const currently = await (await fetch ('http://localhost:4550/currentlyInStock')).json();\r\n        this.setState({osszes:currently.number});\r\n  }\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    const arr = this.state.data;\r\n    const brandNames = () => {\r\n      return arr.map(x => x.brand_name);\r\n    }\r\n    \r\n    const berendeltDbs = () => {\r\n      return arr.map(x => x.berendeltDb/this.state.osszes);\r\n    }\r\n    \r\n    const data = {\r\n      labels: brandNames(),\r\n      data: berendeltDbs(),\r\n    };\r\n\r\n    return (\r\n      <View>\r\n        <Text>Márkák a raktárban</Text>\r\n        <ProgressChart\r\n          data={data}\r\n          width={Dimensions.get('window').width - 16}\r\n          height={220}\r\n          chartConfig={progressCartConfig}\r\n          style={{\r\n            marginVertical: 8,\r\n            borderRadius: 16,\r\n          }}\r\n          strokeWidth= {15}\r\n        />\r\n      </View>\r\n       \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}