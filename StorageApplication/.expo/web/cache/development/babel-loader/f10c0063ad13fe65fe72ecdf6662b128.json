{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Moment from 'moment';\nimport { format } from \"date-fns\";\nimport { soldsComponentStyles } from \"../styles/componentStyles/SoldsDataComponent\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar SoldsThisMonth = function (_Component) {\n  _inherits(SoldsThisMonth, _Component);\n\n  var _super = _createSuper(SoldsThisMonth);\n\n  function SoldsThisMonth() {\n    var _this;\n\n    _classCallCheck(this, SoldsThisMonth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [],\n      idotertam: \"\"\n    };\n\n    _this.fetchData = function _callee() {\n      var response, solds;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4550/sold'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              solds = _context.sent;\n\n              _this.setState({\n                data: solds\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(SoldsThisMonth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      Moment.locale('hu');\n      return _jsx(View, {\n        children: _jsx(FlatList, {\n          data: this.state.data,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(View, {\n              style: soldsComponentStyles.div,\n              children: [_jsxs(Text, {\n                children: [Moment(item.date).format('YYYY.MM.DD hh:mm'), \" - \", item.client_name]\n              }), _jsxs(Text, {\n                style: soldsComponentStyles.telefonadat,\n                children: [item.brand_name, \" \", item.model_name, \" \", item.phone_color, \" \", item.capacity, \"GB (\", item.amount, \" db)\"]\n              })]\n            });\n          }\n        })\n      });\n    }\n  }]);\n\n  return SoldsThisMonth;\n}(Component);\n\nexport { SoldsThisMonth as default };","map":{"version":3,"sources":["C:/szakdolgozat/uj/StorageApplication/element/SoldsInMonth.js"],"names":["React","Component","Moment","format","soldsComponentStyles","SoldsThisMonth","state","data","idotertam","fetchData","fetch","response","json","solds","setState","locale","item","index","toString","div","date","client_name","telefonadat","brand_name","model_name","phone_color","capacity","amount"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,oBAAT;;;;IAEqBC,c;;;;;;;;;;;;;;;UACnBC,K,GAAO;AACLC,MAAAA,IAAI,EAAC,EADA;AAELC,MAAAA,SAAS,EAAC;AAFL,K;;UAKPC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,4BAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEWA,QAAQ,CAACC,IAAT,EAFX;;AAAA;AAEHC,cAAAA,KAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACP,gBAAAA,IAAI,EAAEM;AAAP,eAAd;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAMX,6BAAmB;AACjB,WAAKJ,SAAL;AACD;;;WAED,kBAAS;AACPP,MAAAA,MAAM,CAACa,MAAP,CAAc,IAAd;AACA,aACE,KAAC,IAAD;AAAA,kBACE,KAAC,QAAD;AACE,UAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,IADnB;AAEE,UAAA,YAAY,EAAE,sBAACS,IAAD,EAAMC,KAAN;AAAA,mBAAgBA,KAAK,CAACC,QAAN,EAAhB;AAAA,WAFhB;AAGE,UAAA,UAAU,EAAE;AAAA,gBAAEF,IAAF,QAAEA,IAAF;AAAA,mBACV,MAAC,IAAD;AAAM,cAAA,KAAK,EAAEZ,oBAAoB,CAACe,GAAlC;AAAA,yBACE,MAAC,IAAD;AAAA,2BAAOjB,MAAM,CAACc,IAAI,CAACI,IAAN,CAAN,CAAkBjB,MAAlB,CAAyB,kBAAzB,CAAP,SAAwDa,IAAI,CAACK,WAA7D;AAAA,gBADF,EAEE,MAAC,IAAD;AAAM,gBAAA,KAAK,EAAEjB,oBAAoB,CAACkB,WAAlC;AAAA,2BAAgDN,IAAI,CAACO,UAArD,OAAkEP,IAAI,CAACQ,UAAvE,OAAoFR,IAAI,CAACS,WAAzF,OAAuGT,IAAI,CAACU,QAA5G,UAA0HV,IAAI,CAACW,MAA/H;AAAA,gBAFF;AAAA,cADU;AAAA;AAHd;AADF,QADF;AAcD;;;;EAhCyC1B,S;;SAAvBI,c","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View,FlatList} from 'react-native';\r\nimport Moment from 'moment';\r\nimport { format } from \"date-fns\";\r\nimport { soldsComponentStyles } from '../styles/componentStyles/SoldsDataComponent';\r\n\r\nexport default class SoldsThisMonth extends Component {\r\n  state ={\r\n    data:[],\r\n    idotertam:\"\"\r\n  }\r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:4550/sold');\r\n    const solds = await response.json();\r\n    this.setState({data: solds});\r\n\r\n  }\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }\r\n \r\n  render() {\r\n    Moment.locale('hu');\r\n    return (\r\n      <View>\r\n        <FlatList\r\n          data={this.state.data}\r\n          keyExtractor={(item,index) => index.toString()}\r\n          renderItem={({item}) =>\r\n            <View style={soldsComponentStyles.div}>\r\n              <Text>{Moment(item.date).format('YYYY.MM.DD hh:mm')} - {item.client_name}</Text>\r\n              <Text style={soldsComponentStyles.telefonadat}>{item.brand_name} {item.model_name} {item.phone_color} {item.capacity}GB ({item.amount} db)</Text>\r\n            </View>\r\n          }  \r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}